*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.20" SourceFile="transition_testperformance.scx" CPID="1252" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	*<PropValue>
		DataSource = .NULL.
		Height = 0
		Left = 0
		Name = "Dataenvironment"
		Top = 0
		Width = 0
	*</PropValue>

ENDDEFINE

DEFINE CLASS form1 AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Imgcanvas1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtFile" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.Command1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.Command2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.Command4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.Label1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Optiongroup1" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: createeffect
		*p: obitmap
		*p: omatrix
		*p: x
		*p: y
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		Caption = "Testing Image Canvas Rendering modes / Performances"
		DoCreate = .T.
		Height = 422
		Left = 0
		Name = "Form1"
		obitmap = .F.
		omatrix = 0
		Top = 0
		Width = 576
		x = .F.
		y = .F.
		_memberdata = <VFPData>
			<memberdata name="createeffect" type="method" display="CreateEffect"/>
			<memberdata name="obitmap" type="property" display="oBitmap"/>
			<memberdata name="x" type="property" display="X"/>
			<memberdata name="y" type="property" display="Y"/>
		</VFPData>
	*</PropValue>

	ADD OBJECT 'Command3' AS commandbutton WITH ;
		Anchor = 1, ;
		Caption = "Get Picture", ;
		Height = 25, ;
		Left = 12, ;
		Name = "Command3", ;
		Picture = (home() + "/graphics/bitmaps/outline/open.bmp"), ;
		PictureMargin = 1, ;
		PicturePosition = 1, ;
		TabIndex = 1, ;
		Top = 12, ;
		Width = 96
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Container1' AS container WITH ;
		BorderWidth = 0, ;
		Height = 180, ;
		Left = 12, ;
		Name = "Container1", ;
		Top = 228, ;
		Visible = .T., ;
		Width = 200
		*< END OBJECT: BaseClass="container" />

	ADD OBJECT 'Container1.Command1' AS commandbutton WITH ;
		Alignment = 0, ;
		Caption = "   0 - PictureVal - BMP", ;
		Height = 27, ;
		Left = 4, ;
		Name = "Command1", ;
		Top = 47, ;
		Width = 192
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Container1.Command2' AS commandbutton WITH ;
		Alignment = 0, ;
		Caption = "   4 - PictureVal - PNG", ;
		Height = 27, ;
		Left = 4, ;
		Name = "Command2", ;
		Top = 95, ;
		Width = 192
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Container1.Command4' AS commandbutton WITH ;
		Alignment = 0, ;
		Caption = "   1 - Picture - TMP FILES (DISK)", ;
		Height = 27, ;
		Left = 4, ;
		Name = "Command4", ;
		Top = 143, ;
		Width = 192
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Container1.Label1' AS label WITH ;
		Caption = "Rendering Modes", ;
		Height = 17, ;
		Left = 4, ;
		Name = "Label1", ;
		Top = 11, ;
		Width = 120
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Imgcanvas1' AS imgcanvas WITH ;
		BackStyle = 0, ;
		Height = 360, ;
		Left = 228, ;
		Name = "Imgcanvas1", ;
		Top = 48, ;
		Width = 336
		*< END OBJECT: ClassLib="..\source\gdiplusx.vcx" BaseClass="image" />

	ADD OBJECT 'Optiongroup1' AS optiongroup WITH ;
		ButtonCount = 6, ;
		Height = 132, ;
		Left = 12, ;
		Name = "Optiongroup1", ;
		Top = 60, ;
		Value = 1, ;
		Width = 192, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "Scroll Image Down", ;
		Option1.Height = 17, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Top = 5, ;
		Option1.Value = 1, ;
		Option1.Width = 122, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "Scroll Image Horizontal", ;
		Option2.Height = 17, ;
		Option2.Left = 5, ;
		Option2.Name = "Option2", ;
		Option2.Top = 24, ;
		Option2.Width = 145, ;
		Option3.AutoSize = .T., ;
		Option3.Caption = "Transparency Effect", ;
		Option3.Height = 17, ;
		Option3.Left = 5, ;
		Option3.Name = "Option3", ;
		Option3.Top = 43, ;
		Option3.Width = 126, ;
		Option4.AutoSize = .T., ;
		Option4.Caption = "Rotate Image", ;
		Option4.Height = 17, ;
		Option4.Left = 5, ;
		Option4.Name = "Option4", ;
		Option4.Top = 62, ;
		Option4.Width = 92, ;
		Option5.AutoSize = .T., ;
		Option5.Caption = "Open Rectangle", ;
		Option5.Height = 17, ;
		Option5.Left = 5, ;
		Option5.Name = "Option5", ;
		Option5.Top = 81, ;
		Option5.Width = 107, ;
		Option6.AutoSize = .T., ;
		Option6.Caption = "Gamma Effect", ;
		Option6.Height = 17, ;
		Option6.Left = 5, ;
		Option6.Name = "Option6", ;
		Option6.Top = 100, ;
		Option6.Width = 96
		*< END OBJECT: BaseClass="optiongroup" />

	ADD OBJECT 'txtFile' AS textbox WITH ;
		Anchor = 131, ;
		DisabledBackColor = 255,255,255, ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		FontSize = 8, ;
		Height = 25, ;
		Left = 120, ;
		Name = "txtFile", ;
		TabIndex = 2, ;
		Top = 12, ;
		Width = 444
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE createeffect
		LOCAL loBmp as xfcBitmap
		LOCAL loGfx as xfcGraphics
		
		LOCAL lnSeconds, n, lnWidth, lnHeight, lnOption
		
		lnSeconds = SECONDS()
		
		lnWidth  = Thisform.Imgcanvas1.Width
		lnHeight = Thisform.Imgcanvas1.Height
		
		WITH _Screen.System.Drawing
		
		loSrc = .Bitmap.FromFile(Thisform.TxtFile.Value)
		
		loBmp = .Bitmap.New(loSrc, lnWidth, lnHeight)
		loGfx = Thisform.Imgcanvas1.oGfx 
		Thisform.oBitmap = loBmp
		
		lnOption = Thisform.Optiongroup1.Value 
		
		DO CASE 
		CASE lnOption = 1 && Scroll Down
		
			Thisform.X = 0
			FOR n = -lnHeight TO lnHeight
				Thisform.Y = n
				Thisform.Imgcanvas1.Draw()
			ENDFOR
			
		
		CASE lnOption = 2 && Scroll Horizontal
		
			Thisform.Y = 0
			FOR n = -lnWidth TO lnWidth
				Thisform.X = n
				Thisform.Imgcanvas1.Draw()
			ENDFOR
		
			
		CASE lnOption = 3 && Transparency Effect
			LOCAL loClrMatrix as xfcColorMatrix
			LOCAL loCloned as xfcBitmap
			loCloned = loBmp.Clone()
			
			loClrMatrix = .Imaging.ColorMatrix.New()
			Thisform.X = 0
			Thisform.Y = 0
		
			FOR n = 0.1 TO 1 STEP 0.01
				loClrMatrix.Matrix33 = n
				loBmp = loCloned.Clone()
				loBmp.ApplyColorMatrix(loClrMatrix)
				Thisform.oBitmap = loBmp
				Thisform.Imgcanvas1.Draw()
			ENDFOR
		
		
		CASE lnOption = 4 && Rotate Image
			LOCAL loMatrix as xfcMatrix
			LOCAL loPointF AS xfcPointF
			
			Thisform.X = 0
			Thisform.Y = 0
		
			loMatrix = .Drawing2D.Matrix.New()
			loPointF = .PointF.New(lnWidth / 2, lnHeight / 2)
		
			FOR n = 0 TO 360 STEP 2
				loMatrix.RotateAt(2, loPointF)
				Thisform.Imgcanvas1.oGfx.MultiplyTransform(loMatrix)
				Thisform.Imgcanvas1.Draw()
				Thisform.Imgcanvas1.oGfx.ResetTransform() 
			ENDFOR
		
		
		CASE lnOption = 5 && Open Rectangle
		
			LOCAL loWorkBmp as xfcBitmap
			LOCAL loCloned as xfcBitmap
			LOCAL loGfx as xfcGraphics
			LOCAL x, y, w, h
			
			Thisform.X = 0
			Thisform.Y = 0
		
			loWorkBmp = loBmp.Clone()
			loGfx = .Graphics.FromImage(loWorkBmp)
			loGfx.Clear(.Color.White)
		
			FOR n = 1 TO 50 STEP 0.5
		
				x = (lnWidth / 2) - n * (lnWidth / 100)
				y = (lnHeight / 2) - n * (lnHeight / 100)
				w = ((lnWidth / 2) - x) * 2
				h = ((lnHeight / 2) - y) * 2
		
				IF x < 1
					x = 0
					y = 0
					w = lnWidth
					h = lnHeight
				ENDIF
				loCloned = loBmp.Clone(.Rectangle.New(x, y, w, h))
				loGfx.DrawImage(loCloned, x, y)
		
				Thisform.oBitmap = loWorkBmp
				Thisform.Imgcanvas1.Draw()
			ENDFOR
		
		
		CASE lnOption = 6 && Gamma effect
		
			LOCAL loWorkBmp as xfcBitmap
			LOCAL loGfx as xfcGraphics
			LOCAL loAttr as xfcImageAttributes
			LOCAL loRect as xfcRectangleF
		
			loWorkBmp = loBmp.Clone()
			loGfx = .Graphics.FromImage(loWorkBmp)
			loGfx.Clear(.Color.White)
			loAttr = .Imaging.ImageAttributes.New()
			loRect = loBmp.GetBounds()
		
			Thisform.X = 0
			Thisform.Y = 0
			Thisform.oBitmap = loWorkBmp
		
			FOR n = 0 TO 1 STEP 0.005
				loAttr.SetGamma(n)
				loGfx.DrawImage(loBmp, loRect, loRect, .GraphicsUnit.Pixel, loAttr)
				Thisform.Imgcanvas1.Draw()
			ENDFOR
		
		ENDCASE 
		
		ENDWITH
		
		MESSAGEBOX("Elapsed : " + TRANSFORM(SECONDS() - lnSeconds) + " Seconds", 64)
	ENDPROC

	PROCEDURE Init
		Thisform.TxtFile.Value = LOCFILE("Image\CebolinhaBMPSmall.Bmp")
		Thisform.X = 0
		Thisform.Y = 0
		
		WITH _Screen.System.Drawing
			Thisform.oBitmap = .Bitmap.New(.Bitmap.FromFile(Thisform.TxtFile.Value), Thisform.Imgcanvas1.Width, Thisform.Imgcanvas1.Height)
			Thisform.Imgcanvas1.DrawWhenInvisible = .T.
			Thisform.Imgcanvas1.Draw()
		ENDWITH 
	ENDPROC

	PROCEDURE Command3.Click
		LOCAL lcFile, lnWidth, lnHeight
		lcFile = GETPICT()
		IF EMPTY(lcFile)
			RETURN
		ENDIF
		
		Thisform.txtFile.Value = lcFile
		
		lnWidth  = Thisform.Imgcanvas1.Width
		lnHeight = Thisform.Imgcanvas1.Height
		
		WITH _Screen.System.Drawing
			Thisform.oBitmap = .Bitmap.New(.Bitmap.FromFile(lcFile), lnWidth, lnHeight)
			Thisform.Imgcanvas1.Draw()
		ENDWITH 
	ENDPROC

	PROCEDURE Container1.Command1.Click
		Thisform.Imgcanvas1.RenderMode = 0 && PictureVal / BMP
		Thisform.CreateEffect()
	ENDPROC

	PROCEDURE Container1.Command2.Click
		Thisform.Imgcanvas1.RenderMode = 4 && PictureVal / BMP
		Thisform.CreateEffect()
	ENDPROC

	PROCEDURE Container1.Command4.Click
		Thisform.Imgcanvas1.RenderMode = 1 && PictureVal / BMP
		Thisform.CreateEffect()
	ENDPROC

	PROCEDURE Imgcanvas1.beforedraw
		LOCAL loGfx as xfcGraphics && This is to enable Intellisense for "oGfx"
		loGfx = This.oGfx
		
		loGfx.Clear(_Screen.System.Drawing.Color.White)
		
		IF VARTYPE(Thisform.oBitmap) <> "O"
			RETURN
		ENDIF
		
		loGfx.DrawImage(Thisform.oBitmap, Thisform.X, Thisform.Y)
	ENDPROC

ENDDEFINE
