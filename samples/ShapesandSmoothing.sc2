*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.20" SourceFile="shapesandsmoothing.scx" CPID="1252" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	*<PropValue>
		DataSource = .NULL.
		Height = 0
		Left = 0
		Name = "Dataenvironment"
		Top = 0
		Width = 0
	*</PropValue>

ENDDEFINE

DEFINE CLASS form1 AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Imgcanvas1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkAntiAlias" UniqueID="" Timestamp="" />

	*<PropValue>
		Caption = "Shapes: Lines, Polygon, and Rectangles"
		DoCreate = .T.
		Left = 13
		Name = "Form1"
		Top = 6
	*</PropValue>

	ADD OBJECT 'chkAntiAlias' AS checkbox WITH ;
		Alignment = 0, ;
		BackStyle = 0, ;
		Caption = "AntiAlias", ;
		Height = 17, ;
		Left = 180, ;
		Name = "chkAntiAlias", ;
		Top = 228, ;
		Value = .F., ;
		Width = 72
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'Imgcanvas1' AS imgcanvas WITH ;
		Anchor = 15, ;
		Height = 252, ;
		Left = -1, ;
		Name = "Imgcanvas1", ;
		Top = -1, ;
		Width = 377
		*< END OBJECT: ClassLib="..\source\gdiplusx.vcx" BaseClass="image" />
	
	PROCEDURE chkAntiAlias.InteractiveChange
		Thisform.IMGCANVAS1.Draw()
	ENDPROC

	PROCEDURE Imgcanvas1.beforedraw
		WITH _SCREEN.SYSTEM.drawing
			This.Clear() 
		
			* Set the Smoothing Mode
			IF Thisform.chkAntiAlias.Value
				This.oGfx.SmoothingMode = .Drawing2D.SmoothingMode.AntiAlias 
			ELSE
				This.oGfx.SmoothingMode = .Drawing2D.SmoothingMode.Default
			ENDIF
		
			
			* Draw 2 simple lines
			THIS.oGfx.DrawLine(.Pens.Red, 60, 5, 160, 25)
			p1 = .POINT.NEW(40, 18)
			p2 = .POINT.NEW(120, 28)
			THIS.oGfx.DrawLine(.Pens.Plum, p1, p2)
		
		
			* Draw a curve
			DIMENSION pts(20)
			angle = 0
			FOR x = 1 TO 20
				pts(x) = .PointF.NEW((x-1) * 10 + 120, 180 + 15 * SIN(angle))
				angle = angle +  PI() / 10
			NEXT
			THIS.oGfx.DrawLines(.Pens.Blue, @pts)
			LOCAL p
			FOR EACH p IN pts
				THIS.oGfx.FillEllipse(.Brushes.Green, ;
					.RectangleF.NEW(p.x - 3, p.Y - 3, 6.0, 6.0))
			NEXT
		
		
			* Draw polygon with 2 triangles
			DIMENSION POLY(5)
			POLY[1] = .POINT.NEW(80,50)
			POLY[2] = .POINT.NEW(260,120)
			POLY[3] = .POINT.NEW(260,50)
			POLY[4] = .POINT.NEW(80,120)
			POLY[5] = .POINT.NEW(80,50)
			THIS.oGfx.FillPolygon(.Brushes.Tomato, @POLY)
			PEN = .PEN.NEW(.COLOR.TAN, 4)
			THIS.oGfx.DrawPolygon(PEN, @POLY)
			PEN.Dispose()
		
		
			* Draw Blue piramid
			DIMENSION rcs(10)
			FOR x = 1 TO 10
				rcs(x) = .Rectangle.New(60 - x * 5, 110 + x * 12, x * 10, 12)
			NEXT x
			THIS.oGfx.FillRectangles(.Brushes.RoyalBlue, @rcs)
			THIS.oGfx.DrawRectangles(.Pens.YellowGreen, @rcs)
		ENDWITH
		
	ENDPROC

ENDDEFINE
