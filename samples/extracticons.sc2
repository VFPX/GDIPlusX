*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.20" SourceFile="extracticons.scx" CPID="1252" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	*<PropValue>
		DataSource = .NULL.
		Height = 200
		Left = 1
		Name = "Dataenvironment"
		Top = 220
		Width = 520
	*</PropValue>

ENDDEFINE

DEFINE CLASS form1 AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Imgcanvas1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtFile" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command4" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: mode
	*</DefinedPropArrayMethod>

	*<PropValue>
		Caption = "Extract icons from executables"
		DoCreate = .T.
		Height = 432
		Left = 0
		mode = 0
		Name = "Form1"
		Top = 10
		Width = 707
		WindowState = 0
	*</PropValue>

	ADD OBJECT 'Command1' AS commandbutton WITH ;
		Anchor = 1, ;
		Caption = "VFP Icons", ;
		Height = 25, ;
		Left = 144, ;
		Name = "Command1", ;
		Picture = (home() + "/graphics/bitmaps/outline/open.bmp"), ;
		PictureMargin = 1, ;
		PicturePosition = 1, ;
		TabIndex = 1, ;
		Top = 12, ;
		Width = 108
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command2' AS commandbutton WITH ;
		Anchor = 1, ;
		Caption = "Explorer Icons", ;
		Height = 25, ;
		Left = 276, ;
		Name = "Command2", ;
		Picture = (home() + "/graphics/bitmaps/outline/open.bmp"), ;
		PictureMargin = 1, ;
		PicturePosition = 1, ;
		TabIndex = 1, ;
		Top = 12, ;
		Width = 108
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command3' AS commandbutton WITH ;
		Anchor = 1, ;
		Caption = "Select File", ;
		Height = 25, ;
		Left = 408, ;
		Name = "Command3", ;
		Picture = (home() + "/graphics/bitmaps/outline/open.bmp"), ;
		PictureMargin = 1, ;
		PicturePosition = 1, ;
		TabIndex = 1, ;
		Top = 12, ;
		Width = 108
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command4' AS commandbutton WITH ;
		Anchor = 1, ;
		Caption = "Shell32 Icons", ;
		Height = 25, ;
		Left = 12, ;
		Name = "Command4", ;
		Picture = (home() + "/graphics/bitmaps/outline/open.bmp"), ;
		PictureMargin = 1, ;
		PicturePosition = 1, ;
		TabIndex = 1, ;
		Top = 12, ;
		Width = 108
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Imgcanvas1' AS imgcanvas WITH ;
		Anchor = 15, ;
		Height = 336, ;
		Left = 12, ;
		Name = "Imgcanvas1", ;
		smoothingmode = 0, ;
		Top = 84, ;
		Width = 684
		*< END OBJECT: ClassLib="..\source\gdiplusx.vcx" BaseClass="image" />

	ADD OBJECT 'txtFile' AS textbox WITH ;
		Anchor = 131, ;
		DisabledBackColor = 255,255,255, ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		FontSize = 8, ;
		Height = 25, ;
		Left = 12, ;
		Name = "txtFile", ;
		TabIndex = 2, ;
		Top = 48, ;
		Value = ( GETENV("systemroot") + "\system32\SHELL32.dll"), ;
		Width = 684
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE Command1.Click
		LOCAL lcFile
		lcFile = _vfp.ServerName
		IF EMPTY(lcFile) OR NOT FILE(lcFile)
			WAIT WINDOW "Invalid file"
			RETURN
		ENDIF
		Thisform.txtFile.Value = lcFile
		Thisform.Imgcanvas1.Draw()
		
	ENDPROC

	PROCEDURE Command2.Click
		LOCAL lcFile
		lcFile = getenv("systemroot") + "\EXPLORER.EXE"
		IF EMPTY(lcFile) OR NOT FILE(lcFile)
			WAIT WINDOW "Invalid file"
			RETURN
		ENDIF
		Thisform.txtFile.Value = lcFile
		Thisform.Imgcanvas1.Draw()
	ENDPROC

	PROCEDURE Command3.Click
		LOCAL lcFile
		lcFile = GETFILE("exe;ico;dll")
		IF EMPTY(lcFile) OR NOT FILE(lcFile)
			WAIT WINDOW "Invalid file"
			RETURN
		ENDIF
		Thisform.txtFile.Value = lcFile
		Thisform.Imgcanvas1.Draw()
		
	ENDPROC

	PROCEDURE Command4.Click
		LOCAL lcFile
		lcFile = GETENV("systemroot") + "\system32\SHELL32.dll"
		IF EMPTY(lcFile) OR NOT FILE(lcFile)
			WAIT WINDOW "Invalid file"
			RETURN
		ENDIF
		Thisform.txtFile.Value = lcFile
		Thisform.Imgcanvas1.Draw()
	ENDPROC

	PROCEDURE Imgcanvas1.beforedraw
		LOCAL lcFile
		lcFile = Thisform.txtFile.Value
		IF EMPTY(lcFile)
			RETURN
		ENDIF
		
		This.Clear
		
		* The following code example demonstrates how to extract icons from an EXE file
		
		LOCAL lnIndex, x, y
		LOCAL loIcon as xfcIcon
		
		STORE 0 TO lnIndex, x, y
		
		WITH _SCREEN.System.Drawing
			DO WHILE .T.
				loIcon = .Icon.ExtractAssociatedIcon(lcFile, lnIndex)
				IF ISNULL(loIcon)
					EXIT
				ENDIF
		
		* To save all icons as independent images, just uncomment these lines
		*		lcNewFile = "C:\" + JUSTFNAME(lcFile) + TRANSFORM(lnIndex) + ".png"
		*		loBmp = loIcon.ToBitmap()
		*		loBmp.Save(lcNewFile, .Imaging.ImageFormat.Png)
		
				IF (x + loIcon.Width) > This.Width
					x = 0
					y = y + loIcon.Height + 5
				ENDIF
						
				This.oGfx.DrawIcon(loIcon, x, y)
				x = x + loIcon.Width  + 5
				lnIndex = lnIndex + 1
			ENDDO
		
		ENDWITH 
		
		RETURN
	ENDPROC

ENDDEFINE
