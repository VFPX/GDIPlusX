*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.20" SourceFile="imgview.scx" CPID="1252" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	*<PropValue>
		DataSource = .NULL.
		Height = 200
		Left = 1
		Name = "Dataenvironment"
		Top = 220
		Width = 520
	*</PropValue>

ENDDEFINE

DEFINE CLASS form1 AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Grid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column1.Image1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column2.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column3.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column4.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column4.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column5.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column5.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdPath" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command3" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: getimage
		*m: imageupdate
		*m: loadimages
	*</DefinedPropArrayMethod>

	*<PropValue>
		AutoCenter = .T.
		Caption = "Image View"
		DoCreate = .T.
		Height = 475
		Name = "Form1"
		Width = 554
	*</PropValue>

	ADD OBJECT 'cmdPath' AS commandbutton WITH ;
		Anchor = 12, ;
		Caption = "Choose Path...", ;
		Height = 27, ;
		Left = 110, ;
		Name = "cmdPath", ;
		Top = 428, ;
		Width = 101
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command1' AS commandbutton WITH ;
		Anchor = 12, ;
		Caption = "Print", ;
		Height = 27, ;
		Left = 356, ;
		Name = "Command1", ;
		Top = 428, ;
		Width = 84
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command2' AS commandbutton WITH ;
		Anchor = 12, ;
		Caption = "Close", ;
		Height = 27, ;
		Left = 452, ;
		Name = "Command2", ;
		Top = 428, ;
		Width = 84
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command3' AS commandbutton WITH ;
		Anchor = 12, ;
		Caption = "Web Thumbnails...", ;
		Height = 27, ;
		Left = 225, ;
		Name = "Command3", ;
		Top = 428, ;
		Width = 115
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Grid1' AS grid WITH ;
		Anchor = 15, ;
		ColumnCount = 5, ;
		DeleteMark = .F., ;
		Height = 409, ;
		HighlightStyle = 2, ;
		Left = 12, ;
		Name = "Grid1", ;
		Panel = 1, ;
		RecordMark = .F., ;
		RecordSource = "curImages", ;
		RowHeight = 74, ;
		SplitBar = .F., ;
		Top = 12, ;
		Width = 529, ;
		Column1.ControlSource = "filename", ;
		Column1.Name = "Column1", ;
		Column1.Sparse = .F., ;
		Column1.Width = 109, ;
		Column2.ControlSource = "filename", ;
		Column2.Name = "Column2", ;
		Column2.Width = 168, ;
		Column3.ControlSource = "filesize", ;
		Column3.Name = "Column3", ;
		Column4.ControlSource = "filedate", ;
		Column4.Name = "Column4", ;
		Column5.ControlSource = "filetime", ;
		Column5.Name = "Column5"
		*< END OBJECT: BaseClass="grid" />

	ADD OBJECT 'Grid1.Column1.Header1' AS header WITH ;
		Caption = "Thumbnail", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grid1.Column1.Image1' AS imgcanvas WITH ;
		Name = "Image1", ;
		Stretch = 2
		*< END OBJECT: ClassLib="..\gdiplusx.vcx" BaseClass="image" />

	ADD OBJECT 'Grid1.Column2.Header1' AS header WITH ;
		Caption = "File Name", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grid1.Column2.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Grid1.Column3.Header1' AS header WITH ;
		Caption = "Size", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grid1.Column3.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Grid1.Column4.Header1' AS header WITH ;
		Caption = "Date", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grid1.Column4.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Grid1.Column5.Header1' AS header WITH ;
		Caption = "Time", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grid1.Column5.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE getimage
		** Used by the report to render the image
		This.grid1.column1.image1.Draw()
		RETURN This.grid1.column1.image1
	ENDPROC

	PROCEDURE imageupdate
	ENDPROC

	PROCEDURE Init
		This.LoadImages()
		
	ENDPROC

	PROCEDURE Load
		CREATE CURSOR curImages ;
		( filename v(250), ;
		  filesize i, ;
		  filedate d, ;
		  filetime c(12), ;
		  filepath v(250))
	ENDPROC

	PROCEDURE loadimages
		** Select a directory of images to load into the image cursor
		
		LOCAL lcPath, lcSafety
		
		lcSafety = SET("Safety")
		lcPath = GETDIR()
		
		IF EMPTY(lcPath)
			RETURN
		ENDIF
		
		IF ADIR(laImages, ADDBS(lcPath)+"*.*") > 0
			SELECT curImages
			SET SAFETY OFF
			ZAP
			SET SAFETY &lcSafety
			SET DELETED ON 
			APPEND FROM ARRAY laImages
			DELETE FOR NOT INLIST(UPPER(JUSTEXT(filename)), "JPG","GIF","BMP","EMF","TIF","PNG")
			REPLACE ALL filepath WITH lcPath
			GO TOP
		ENDIF
		
		This.Refresh()
	ENDPROC

	PROCEDURE cmdPath.Click
		ThisForm.LoadImages()
	ENDPROC

	PROCEDURE Command1.Click
		PRIVATE oForm  && needed by report
		oForm = ThisForm
		
		REPORT FORM imgView PREVIEW
	ENDPROC

	PROCEDURE Command2.Click
		ThisForm.Release()
	ENDPROC

	PROCEDURE Command3.Click
		#DEFINE CRLF CHR(13)+CHR(10)
		#DEFINE PropertyTagDateTime 0x0132
		
		LOCAL lcPath, lnFile, laFiles[1], lcHTML, lcThumbHTML
		LOCAL lnWidth, lnHeight
		LOCAL loImg AS xfcImage
		LOCAL loThumb AS xfcImage
		LOCAL loBmp AS xfcBitmap
		LOCAL loGfx AS xfcGraphics
		LOCAL loColor AS xfcColor
		LOCAL loBrushLight AS xfcSolidBrush
		LOCAL loBrushDark AS xfcSolidBrush
		LOCAL loProp AS xfcPropertyItem
		
		SELECT curImages
		GO TOP 
		lcPath = ADDBS(filepath)
		lcThumbPath = lcPath+"Thumbs\"
		
		IF NOT DIRECTORY(lcThumbPath)
			MD (lcThumbPath)
		ENDIF
		
		WITH _SCREEN.System.Drawing
		
		loFont = .Font.New("Arial",10,1)
		loColor = .Color.New(0x80000000)
		loBrushDark = .SolidBrush.New(loColor)
		loColor = .Color.New(0xa0ffffff)
		loBrushLight = .SolidBrush.New(loColor)
		
		loImg = NULL
		
		lnWidth = 160
		lnHeight = 120
		
		lcThumbHTML = ""
		
		
		SELECT curImages
		SCAN
			lcFile = filename
			loImg = .Image.FromFile(lcPath+lcFile)
			loBmp = .Bitmap.New(160,120)
			loGfx = .Graphics.FromImage(loBmp)
			
			lcDate = ""
			** Get picture taken date
			IF NOT ISNULL(loImg.PropertyIdList[1])
				FOR EACH lnProp IN loImg.PropertyIdList
					loProp = loImg.GetPropertyItem(lnProp)
					IF loProp.Id = PropertyTagDateTime
						lcDate = ""+loProp.Value
						EXIT
					ENDIF
				ENDFOR
			ENDIF
			lcString = lcFile + CRLF + ;
						TRANSFORM(loImg.Width) + " x " + TRANSFORM(loImg.Height) + CRLF + ;
						lcDate	
			
			loGfx.Clear(.Color.White)
			loGFX.DrawImage(loImg,0,0,lnWidth,lnHeight)
			loGFX.DrawString(lcString, loFont, loBrushDark, 1, 1)
			loGFX.DrawString(lcString, loFont, loBrushLight, 0, 0)
			
			loBmp.Save(FORCEEXT(lcThumbPath+"thumb"+lcFile,"jpg"), .Imaging.ImageFormat.Jpeg)
			lcThumbHTML = lcThumbHTML + ;
						[   <a href="../]+lcFile+[" target="large">]+;
						[<img src="thumb]+FORCEEXT(lcFile,"jpg")+[" border="0" alt="]+lcString+["></a>]+CRLF
		
		ENDSCAN
		
		TEXT TO lcHTML NOSHOW TEXTMERGE
		<html>
		<body>
		<<lcThumbHTML>>
		</body>
		</html>
		ENDTEXT
		
		ENDWITH
		
		STRTOFILE(lcHTML, lcThumbPath+"default.htm")
		
		MESSAGEBOX("File Created: "+lcThumbPath+"default.htm")
		
		
	ENDPROC

	PROCEDURE Grid1.Column1.Image1.beforedraw
		** Update the canvas for each call to Draw()
		
		LOCAL loGFX AS xfcGraphics
		LOCAL loImg AS xfcImage
		LOCAL lnWidth, lnHeight
		
		IF NOT FILE(filepath+filename)
			RETURN 
		ENDIF
		
		lnWidth = This.Width
		lnHeight = This.Height
		
		WITH _SCREEN.System.Drawing
		
			loGFX = This.oGfx
			loImg = .Image.FromFile(filepath+filename)
		
			#DEFINE PropertyTagDateTime 0x0132
			LOCAL loProp AS xfcPropertyItem
			lcDate = ""
		
			** Calculate the image date
		*!*		IF NOT ISNULL(loImg.PropertyIdList[1])
		*!*			FOR EACH lnProp IN loImg.PropertyIdList
		*!*				loProp = loImg.GetPropertyItem(lnProp)
		*!*				IF loProp.Id = PropertyTagDateTime
		*!*					lcDate = ""+loProp.Value
		*!*					EXIT
		*!*				ENDIF
		*!*			ENDFOR
		*!*		ENDIF
		
			** Specify the watermark text
			TEXT TO lcString NOSHOW TEXTMERGE
		<<filename>>
		<<loImg.Width>> x <<loImg.Height>>
		<<lcDate>>
			ENDTEXT
		
			** Get a thumbnail for the image and draw it to the canvas
			loImg = loImg.GetThumbnailImage(lnWidth,lnHeight)
			loGFX.DrawImage(loImg,0,0,lnWidth,lnHeight)
		
			** Draw the watermark text
			loGFX.DrawString(lcString, This.Controls("Font"), This.Controls("Brush1"), 1, 1)
			loGFX.DrawString(lcString, This.Controls("Font"), This.Controls("Brush2"), 0, 0)
		
		ENDWITH
		
		loImg = NULL
		
	ENDPROC

	PROCEDURE Grid1.Column1.Image1.setup
		** Intialize the drawing objects we will need for the canvas
		WITH _SCREEN.System.Drawing
			This.Controls.Add(.Font.New("Arial",10,1), "Font")
			This.Controls.Add(.SolidBrush.New(.Color.New(0x80000000)), "Brush1")
			This.Controls.Add(.SolidBrush.New(.Color.New(0x90ffffff)), "Brush2")
		ENDWITH
		
	ENDPROC

ENDDEFINE
