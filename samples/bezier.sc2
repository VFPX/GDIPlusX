*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.20" SourceFile="bezier.scx" CPID="1252" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	*<PropValue>
		DataSource = .NULL.
		Height = 0
		Left = 0
		Name = "Dataenvironment"
		Top = 0
		Width = 0
	*</PropValue>

ENDDEFINE

DEFINE CLASS form1 AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Imgcanvas1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label1" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: nearpoint
		*p: nctrlx1
		*p: nctrlx2
		*p: nctrly1
		*p: nctrly2
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		Caption = "Customized Bezier"
		DoCreate = .T.
		Height = 444
		Left = 37
		Name = "Form1"
		nctrlx1 = 50
		nctrlx2 = 400
		nctrly1 = 50
		nctrly2 = 400
		Top = 0
		Width = 432
		_memberdata = <VFPData>
			<memberdata name="foomethod" type="method"     display="fooMethod"     favorites="True"/>
			<memberdata name="Form1" type="property" display="Form1" favorites="True"/>
			<memberdata name="_memberdata" type="property" display="_MemberData" favorites="True"/>
			<memberdata name="baseclass" type="property" display="BaseClasS" favorites="True"/>
			<memberdata name="error" type="method" display="eRRor" favorites="True"/>
		</VFPData>
	*</PropValue>

	ADD OBJECT 'Imgcanvas1' AS imgcanvas WITH ;
		Anchor = 15, ;
		Height = 444, ;
		Left = 0, ;
		Name = "Imgcanvas1", ;
		Top = 0, ;
		Width = 432
		*< END OBJECT: ClassLib="..\source\gdiplusx.vcx" BaseClass="image" />

	ADD OBJECT 'Label1' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Drag and drop the edges of the red lines to change the bezier", ;
		FontSize = 12, ;
		Height = 21, ;
		Left = 3, ;
		Name = "Label1", ;
		Top = 1, ;
		Width = 425
		*< END OBJECT: BaseClass="label" />
	
	PROCEDURE Imgcanvas1.beforedraw
		LOCAL loPen AS xfcPen
		LOCAL loPen2 AS xfcPen
		LOCAL loGfx AS xfcGraphics
		
		WITH _SCREEN.System.Drawing
		loPen = .Pen.New(.Color.Blue, 6)
		loPen2 = .Pen.New(.Color.Red, 3)
		loPen2.EndCap = _screen.system.Drawing.Drawing2D.LineCap.RoundAnchor
		loPen2.StartCap = _screen.system.Drawing.Drawing2D.LineCap.RoundAnchor 
		
		loGfx = This.oGfx
		
		This.Clear()
		loGfx.DrawBezier(loPen, ;
				This.oPoint1, This.oCtrl1, ;
				This.oCtrl2, This.oPoint2)
				
		loGFX.DrawLine(loPen2, This.oPoint1, This.oCtrl1)
		loGFX.DrawLine(loPen2, This.oPoint2, This.oCtrl2)
		
		ENDWITH	
	ENDPROC

	PROCEDURE Imgcanvas1.MouseDown
		LPARAMETERS nButton, nShift, nXCoord, nYCoord
		
		DO CASE
		CASE nButton = 1
		
			DO CASE
			CASE BETWEEN(This.oPoint1.X, nXCoord-5, nXCoord+5) AND BETWEEN(This.oPoint1.Y, nYCoord-5, nYCoord+5)
				This.oSelectedPoint = This.oPoint1
			CASE BETWEEN(This.oPoint2.X, nXCoord-5, nXCoord+5) AND BETWEEN(This.oPoint2.Y, nYCoord-5, nYCoord+5)
				This.oSelectedPoint = This.oPoint2
			CASE BETWEEN(This.oCtrl1.X, nXCoord-5, nXCoord+5) AND BETWEEN(This.oCtrl1.Y, nYCoord-5, nYCoord+5)
				This.oSelectedPoint = This.oCtrl1
			CASE BETWEEN(This.oCtrl2.X, nXCoord-5, nXCoord+5) AND BETWEEN(This.oCtrl2.Y, nYCoord-5, nYCoord+5)
				This.oSelectedPoint = This.oCtrl2
			ENDCASE
			
		ENDCASE
		
		This.Draw()
	ENDPROC

	PROCEDURE Imgcanvas1.MouseMove
		LPARAMETERS nButton, nShift, nXCoord, nYCoord
		
		DO CASE
		
		CASE nButton = 1
			IF VARTYPE(This.oSelectedPoint) = "O"
				This.oSelectedPoint.X = nXCoord
				This.oSelectedPoint.Y = nYCoord
				This.Draw()
				This.MousePointer = 5 && Size
			ENDIF
		
		OTHERWISE 
			IF ;
				BETWEEN(This.oPoint1.X, nXCoord-5, nXCoord+5) AND BETWEEN(This.oPoint1.Y, nYCoord-5, nYCoord+5) OR ;
				BETWEEN(This.oPoint2.X, nXCoord-5, nXCoord+5) AND BETWEEN(This.oPoint2.Y, nYCoord-5, nYCoord+5) OR ;
				BETWEEN(This.oCtrl1.X, nXCoord-5, nXCoord+5) AND BETWEEN(This.oCtrl1.Y, nYCoord-5, nYCoord+5) OR ;
				BETWEEN(This.oCtrl2.X, nXCoord-5, nXCoord+5) AND BETWEEN(This.oCtrl2.Y, nYCoord-5, nYCoord+5) ;
				
				This.MousePointer = 2 && Cross
		
		
			ELSE 
				This.MousePointer = 0 && Default
			ENDIF
			
		ENDCASE
	ENDPROC

	PROCEDURE Imgcanvas1.MouseUp
		LPARAMETERS nButton, nShift, nXCoord, nYCoord
		
		DO CASE
		CASE nButton = 1
			This.oSelectedPoint = NULL
		ENDCASE
	ENDPROC

	PROCEDURE Imgcanvas1.setup
		This.AddProperty("oPoint1", _SCREEN.System.Drawing.Point.New(50,200))
		This.AddProperty("oPoint2", _SCREEN.System.Drawing.Point.New(200,50))
		This.AddProperty("oCtrl1", _SCREEN.System.Drawing.Point.New(50,50))
		This.AddProperty("oCtrl2", _SCREEN.System.Drawing.Point.New(200,200))
		This.AddProperty("oSelectedPoint","")
	ENDPROC

ENDDEFINE
