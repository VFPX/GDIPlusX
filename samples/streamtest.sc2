*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.20" SourceFile="streamtest.scx" CPID="1252" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	*<PropValue>
		DataSource = .NULL.
		Height = 200
		Left = 1
		Name = "Dataenvironment"
		Top = 220
		Width = 520
	*</PropValue>

ENDDEFINE

DEFINE CLASS form1 AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Image1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtFile" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Image2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Image3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Image4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Image5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Image6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SpnTests" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblTests" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Combo1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkProgress" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkIStream" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: hideobjects
		*m: processimage
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		AutoCenter = .T.
		Caption = "Stream Testing"
		DoCreate = .T.
		Height = 615
		Name = "Form1"
		ShowWindow = 2
		Width = 882
		WindowState = 0
		_memberdata = <VFPData>
			<memberdata name="foomethod" type="method" display="fooMethod" favorites="True"/>
			<memberdata name="Form1" type="property" display="Form1" favorites="True"/>
			<memberdata name="_memberdata" type="property" display="_MemberData" favorites="True"/>
			<memberdata name="baseclass" type="property" display="BaseClasS" favorites="True"/>
			<memberdata name="error" type="method" display="eRRor" favorites="True"/>
			<memberdata name="processimage" type="method" display="ProcessImage"/>
			<memberdata name="showmemory" type="method" display="ShowMemory"/>
			<memberdata name="hideobjects" type="method" display="HideObjects"/>
		</VFPData>
	*</PropValue>

	ADD OBJECT 'chkIStream' AS checkbox WITH ;
		Alignment = 0, ;
		Caption = "IStream ActiveX", ;
		Height = 17, ;
		Left = 760, ;
		Name = "chkIStream", ;
		Top = 29, ;
		Value = .F., ;
		Width = 106
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'chkProgress' AS checkbox WITH ;
		Alignment = 0, ;
		Caption = "Show Progress", ;
		Height = 17, ;
		Left = 760, ;
		Name = "chkProgress", ;
		Top = 10, ;
		Value = .T., ;
		Width = 108
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'Combo1' AS combobox WITH ;
		Height = 24, ;
		Left = 600, ;
		Name = "Combo1", ;
		Style = 2, ;
		Top = 48, ;
		Width = 144
		*< END OBJECT: BaseClass="combobox" />

	ADD OBJECT 'Command1' AS commandbutton WITH ;
		Anchor = 12, ;
		Caption = "Go !", ;
		Height = 25, ;
		Left = 792, ;
		Name = "Command1", ;
		Picture = ..\gdiplusx_20070831\new samples\, ;
		PictureMargin = 1, ;
		PicturePosition = 1, ;
		TabIndex = 1, ;
		Top = 48, ;
		Width = 72
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command3' AS commandbutton WITH ;
		Anchor = 12, ;
		Caption = "Get Picture", ;
		Height = 25, ;
		Left = 12, ;
		Name = "Command3", ;
		Picture = (home() + "/graphics/bitmaps/outline/open.bmp"), ;
		PictureMargin = 1, ;
		PicturePosition = 1, ;
		TabIndex = 1, ;
		Top = 48, ;
		Width = 84
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Image1' AS image WITH ;
		Height = 252, ;
		Left = 12, ;
		Name = "Image1", ;
		Stretch = 1, ;
		Top = 84, ;
		Width = 276
		*< END OBJECT: BaseClass="image" />

	ADD OBJECT 'Image2' AS image WITH ;
		Height = 252, ;
		Left = 300, ;
		Name = "Image2", ;
		Stretch = 1, ;
		Top = 84, ;
		Width = 276
		*< END OBJECT: BaseClass="image" />

	ADD OBJECT 'Image3' AS image WITH ;
		Height = 252, ;
		Left = 588, ;
		Name = "Image3", ;
		Stretch = 1, ;
		Top = 84, ;
		Width = 276
		*< END OBJECT: BaseClass="image" />

	ADD OBJECT 'Image4' AS image WITH ;
		Height = 252, ;
		Left = 12, ;
		Name = "Image4", ;
		Stretch = 1, ;
		Top = 348, ;
		Width = 276
		*< END OBJECT: BaseClass="image" />

	ADD OBJECT 'Image5' AS image WITH ;
		Height = 252, ;
		Left = 300, ;
		Name = "Image5", ;
		Stretch = 1, ;
		Top = 348, ;
		Width = 276
		*< END OBJECT: BaseClass="image" />

	ADD OBJECT 'Image6' AS image WITH ;
		Height = 252, ;
		Left = 588, ;
		Name = "Image6", ;
		Stretch = 1, ;
		Top = 348, ;
		Width = 276
		*< END OBJECT: BaseClass="image" />

	ADD OBJECT 'Label1' AS label WITH ;
		AutoSize = .F., ;
		BackColor = 255,255,255, ;
		Caption = "Test Result", ;
		FontBold = .T., ;
		ForeColor = 255,0,0, ;
		Height = 36, ;
		Left = 12, ;
		Name = "Label1", ;
		Top = 84, ;
		Width = 276, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label2' AS label WITH ;
		AutoSize = .F., ;
		BackColor = 255,255,255, ;
		Caption = "Test Result", ;
		FontBold = .T., ;
		ForeColor = 255,0,0, ;
		Height = 36, ;
		Left = 300, ;
		Name = "Label2", ;
		Top = 84, ;
		Width = 276, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label3' AS label WITH ;
		AutoSize = .F., ;
		BackColor = 255,255,255, ;
		Caption = "Test Result", ;
		FontBold = .T., ;
		ForeColor = 255,0,0, ;
		Height = 48, ;
		Left = 588, ;
		Name = "Label3", ;
		Top = 84, ;
		Width = 276, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label4' AS label WITH ;
		AutoSize = .F., ;
		BackColor = 255,255,255, ;
		Caption = "Test Result", ;
		FontBold = .T., ;
		ForeColor = 255,0,0, ;
		Height = 48, ;
		Left = 12, ;
		Name = "Label4", ;
		Top = 348, ;
		Width = 276, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label5' AS label WITH ;
		AutoSize = .F., ;
		BackColor = 255,255,255, ;
		Caption = "Test Result", ;
		FontBold = .T., ;
		ForeColor = 255,0,0, ;
		Height = 36, ;
		Left = 300, ;
		Name = "Label5", ;
		Top = 348, ;
		Width = 276, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label6' AS label WITH ;
		AutoSize = .F., ;
		BackColor = 255,255,255, ;
		Caption = "Test Result", ;
		FontBold = .T., ;
		ForeColor = 255,0,0, ;
		Height = 36, ;
		Left = 588, ;
		Name = "Label6", ;
		Top = 348, ;
		Width = 276, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label7' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Select a picture, enter the number of tests in the spinner, and click 'GO' to perform test using different techniques to obtain PictureVal without accessing the disk.", ;
		FontSize = 11, ;
		ForeColor = 0,0,160, ;
		Height = 36, ;
		Left = 12, ;
		Name = "Label7", ;
		Top = 4, ;
		Width = 562, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblTests' AS label WITH ;
		BackStyle = 0, ;
		Caption = "Nr of Tests", ;
		Height = 17, ;
		Left = 600, ;
		Name = "lblTests", ;
		Top = 12, ;
		Width = 72
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'SpnTests' AS spinner WITH ;
		Height = 24, ;
		Increment =   5.00, ;
		KeyboardHighValue = 10000, ;
		KeyboardLowValue = 1, ;
		Left = 684, ;
		Name = "SpnTests", ;
		SpinnerHighValue = 10000.00, ;
		SpinnerLowValue =   1.00, ;
		Top = 12, ;
		Value = 200, ;
		Width = 60
		*< END OBJECT: BaseClass="spinner" />

	ADD OBJECT 'txtFile' AS textbox WITH ;
		Anchor = 12, ;
		FontSize = 8, ;
		Height = 25, ;
		Left = 108, ;
		Name = "txtFile", ;
		TabIndex = 2, ;
		Top = 48, ;
		Width = 468
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE hideobjects
		WITH Thisform as Form
			.Label2.Visible = .F.	
			.Label3.Visible = .F.
			.Label4.Visible = .F.
			.Label5.Visible = .F.
			.Label6.Visible = .F.
		
			.Image2.Visible = .F.	
			.Image3.Visible = .F.
			.Image4.Visible = .F.
			.Image5.Visible = .F.
			.Image6.Visible = .F.
		ENDWITH
	ENDPROC

	PROCEDURE Init
		DO (LOCFILE("System.app"))
		
		
		LOCAL lcFile
		lcFile = LOCFILE("Cebolinha.png")
		Thisform.TxtFile.Value = lcFile
		Thisform.Image1.Picture = lcFile
		Thisform.HideObjects()
		
		WITH Thisform.Combo1 as ComboBox 
			.AddItem("ImageFormat.Bmp")
			.AddItem("\ImageFormat.Png")
			.AddItem("ImageFormat.Jpeg")
			.AddItem("ImageFormat.Gif")
			.AddItem("ImageFormat.Tiff")
			.Value = "ImageFormat.Bmp"
		ENDWITH
		
	ENDPROC

	PROCEDURE processimage
		LOCAL lcFile, llProgress, lnTimes, n, lcBuffer, lnSecs
		lcFile = Thisform.txtFile.Value
		IF EMPTY(lcFile)
			RETURN
		ENDIF
		
		Thisform.HideObjects()
		llProgress = Thisform.ChkProgress.Value
		lnTimes = Thisform.SpnTests.Value
		
		LOCAL loBmp AS xfcBitmap
		LOCAL loBmp2 AS xfcBitmap
		LOCAL loImgFormat AS xfcImageFormat
		loImgFormat = EVALUATE("_Screen.System.Drawing.Imaging." + Thisform.Combo1.Value)
		
		
		WITH _SCREEN.System.Drawing
		
		* Sample 1 - Using GetPictureVal new function
		lnSecs = SECONDS()
		Thisform.Image1.Visible = .T.
		FOR n = 1 TO lnTimes
			loBmp = .Bitmap.FromFile(lcFile)
			lcBuffer = loBmp.GetPictureVal(loImgFormat)
			Thisform.Image1.PictureVal = lcBuffer
		
			IF llProgress
				WAIT WINDOW ("Test 1 - Using GetPictureVal Function - " + TRANSFORM((n/lnTimes)*100, "999.9") + "%") NOWAIT 
			ENDIF 
		ENDFOR
		loBmp.Dispose()
		lcBuffer = NULL
		Thisform.Label1.Caption = "Test 1 - Using GetPictureVal new function" + ;
			CHR(13) + TRANSFORM(SECONDS() - lnSecs) + " seconds"
		Thisform.Label1.Visible = .T.
		
		
		* Sample 2 - Saving directly to the image object
		lnSecs = SECONDS()
		Thisform.Image2.Visible = .T.
		FOR n = 1 TO lnTimes
			loBmp = .Bitmap.FromFile(lcFile)
			loBmp.Save(Thisform.Image2, loImgFormat) && Save directly to the image object
			IF llProgress
				WAIT WINDOW ("Test 2 - SAVE TO IMAGE FILE - " + TRANSFORM((n/lnTimes)*100, "999.9") + "%") NOWAIT 
			ENDIF 
		ENDFOR
		loBmp.Dispose()
		Thisform.Label2.Caption = "Test 2 - Saving directly to the image object" + ;
			CHR(13) + TRANSFORM(SECONDS() - lnSecs) + " seconds"
		Thisform.Label2.Visible = .T.
		
		
		* Sample 3 - Saving to a stream and retrieving to PictureVal
		lnSecs = SECONDS()
		Thisform.Image3.Visible = .T.
		FOR n = 1 TO lnTimes
			LOCAL loStream as xfcMemoryStream
			loStream = _Screen.System.IO.MemoryStream.New()
			loBmp = .Bitmap.FromFile(lcFile)
			loBmp.Save(loStream, loImgFormat) && Save directly to the Stream object
			Thisform.Image3.PictureVal = loStream.GetBuffer()
			IF llProgress
				WAIT WINDOW ("Test 3 - SAVE TO IMAGE FILE - " + TRANSFORM((n/lnTimes)*100, "999.9") + "%") NOWAIT 
			ENDIF
			
		ENDFOR
		loStream = NULL
		loBmp.Dispose()
		Thisform.Label3.Caption = "Test 3 - Saving to a stream and retrieving to PictureVal" + ;
			CHR(13) + TRANSFORM(SECONDS() - lnSecs) + " seconds"
		Thisform.Label3.Visible = .T.
		
		
		* Sample 4 - Saving to a stream, loading from stream and use GetPictureVal
		lnSecs = SECONDS()
		Thisform.Image4.Visible = .T.
		FOR n = 1 TO lnTimes
			LOCAL loStream as xfcMemoryStream
			loStream = _Screen.System.IO.MemoryStream.New()
			loBmp = .Bitmap.FromFile(lcFile)
			loBmp.Save(loStream, loImgFormat) && Save directly to the Stream object
		
			LOCAL loBmp2 as xfcBitmap
			loBmp2 = _Screen.System.Drawing.Bitmap.FromStream(loStream)	
			Thisform.Image4.PictureVal = loBmp2.GetPictureVal(loImgFormat)
		
			IF llProgress
				WAIT WINDOW ("Test 4 - Saving to a stream, loading from stream and use GetPictureVal - " + TRANSFORM((n/lnTimes)*100, "999.9") + "%") NOWAIT 
			ENDIF 
		ENDFOR
		loBmp.Dispose()
		loBmp2.Dispose()
		loStream = NULL
		Thisform.Label4.Caption = "Test 4 - Saving to a stream, loading from stream and use GetPictureVal" + ;
			CHR(13) + TRANSFORM(SECONDS() - lnSecs) + " seconds"
		Thisform.Label4.Visible = .T.
		
		
		* Sample 5 - Using GetPictureValfromHBitmap new function
		lnSecs = SECONDS()
		Thisform.Image5.Visible = .T.
		FOR n = 1 TO lnTimes
			loBmp = .Bitmap.FromFile(lcFile)
			lcBuffer = loBmp.GetPictureValfromHBitmap()
			Thisform.Image5.PictureVal = lcBuffer
			IF llProgress
				WAIT WINDOW ("Test 5 - Using GetPictureValfromHBitmap Function - " + TRANSFORM((n/lnTimes)*100, "999.9") + "%") NOWAIT 
			ENDIF 
		ENDFOR
		loBmp.Dispose()
		lcBuffer = NULL
		Thisform.Label5.Caption = "Test 5 - GetPictureValfromHBitmap new function" + ;
			CHR(13) + TRANSFORM(SECONDS() - lnSecs) + " seconds"
		Thisform.Label5.Visible = .T.
		
		
		* Sample 6 - Using Calvin Hsia Active-X wrapper
		* See this article: "Use an IStream object to avoid disk access"
		* http://blogs.msdn.com/calvin_hsia/archive/2006/02/17/534529.aspx
		* The COM server is a light weight 39K dll, that wraps the ISTREAM class
		* This test will be able to compare the performance between all different aproaches
		
		* To Unregister this Active-X, run the code below:
		* RUN /N REGSVR32 /u vfpStream.dll
		
		LOCAL llRunTest
		llRunTest = Thisform.chkIStream.Value
		
		DO WHILE llRunTest
		
			LOCAL loStream as "VFPStream.Cstream"
		
			TRY 
				loStream = CREATEOBJECT("VFPStream.Cstream")
			CATCH 
				IF MESSAGEBOX("Calvin Hsia's VFPStream class is not installed or registered" + CHR(13) + ;
						"The COM server is a light weight 39K dll, that wraps the ISTREAM class" + CHR(13) + ; 
						"Do you want to install this Active-X now ?", 32 + 4, "Install VFP Stream Active-X ?") = 6
					LOCAL lcStreamFile, lcCommand
					lcStreamFile = LOCFILE("..\Samples\vfpStream.dll")
					lcCommand = "RUN /N REGSVR32 /S " + lcStreamFile
					&lcCommand
			
					TRY 
						loStream = CREATEOBJECT("VFPStream.Cstream")
					CATCH 
						MESSAGEBOX("Could not install the IStream class", 16, "Error")
						llRunTest = .F.
					ENDTRY
				ELSE
					llRunTest = .F.
				ENDIF
			ENDTRY 
			IF llRunTest = .F.
				EXIT
			ENDIF 
		
			lnSecs = SECONDS()
			Thisform.Image6.Visible = .T.
		
			FOR n = 1 TO lnTimes
				loBmp = .Bitmap.FromFile(lcFile)
		
				* Create a Stream Object
				* Write to a stream: avoid the file I/O
				loStream = CREATEOBJECT("VFPStream.Cstream")
				m.lhStream = loStream.CreateStream(1)  && Create a Stream
		
				loBmp.Save(m.lhStream, loImgFormat) && Pass the stream handle to Save method
			
				lcBuffer = ""
				loStream.ReadStream(m.lhStream,"lcBuffer",0)    && Read stream into blob field directly
				loStream.ReleaseStream(m.lhStream)
		
				* Now pass the variable that contains the Image to the PictureVal property of
				* a picture Image, which was never written to disk
				Thisform.Image6.PictureVal = lcBuffer
				IF llProgress
					WAIT WINDOW ("Test 6 - USING CALVIN'S ACTIVE-X WRAPPER - " + TRANSFORM((n/lnTimes)*100, "999.9") + "%") NOWAIT 
				ENDIF 
			ENDFOR
			loBmp.Dispose()
			loStream = NULL
			lcBuffer = NULL
			Thisform.Label6.Caption = "Test 6 - Using Calvin Hsia Active-X wrapper" + ;
				CHR(13) + TRANSFORM(SECONDS() - lnSecs) + " seconds"
			Thisform.Label6.Visible = .T.
		
			EXIT 
		ENDDO 
		
		WAIT CLEAR 
		
		ENDWITH
		
		RETURN
	ENDPROC

	PROCEDURE Command1.Click
		Thisform.ProcessImage()
		
	ENDPROC

	PROCEDURE Command3.Click
		lcFile = GETPICT()
		IF EMPTY(lcFile)
			RETURN
		ENDIF
		
		Thisform.HideObjects()
		
		Thisform.TxtFile.Value = lcFile
		Thisform.Image1.PictureVal = ""
		Thisform.Image1.Picture = lcFile
		
	ENDPROC

ENDDEFINE
