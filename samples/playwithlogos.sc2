*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.20" SourceFile="playwithlogos.scx" CPID="1252" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	*<PropValue>
		DataSource = .NULL.
		Height = 200
		Left = 1
		Name = "Dataenvironment"
		Top = 220
		Width = 520
	*</PropValue>

ENDDEFINE

DEFINE CLASS form1 AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Imgcanvas1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtFile" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Image2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.cmdDraw" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.Shape1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.Label1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.shpMin" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.shpMax" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.Spinner1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.Label3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Image1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtLogoFile" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command3" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: calculaterangeofcolors
		*m: changecolors
		*m: loadlogo
		*m: loadmain
		*m: processimage
		*p: hbmp
		*p: hbmplogo
		*p: obmp
		*p: obmplogo
		*p: wbmp
		*p: wbmplogo
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		Caption = "Playing with logos using ImageAttributes"
		DoCreate = .T.
		hbmp = 0
		hbmplogo = 0
		Height = 509
		Left = 23
		MinHeight = 500
		MinWidth = 500
		Name = "Form1"
		obmp = 0
		obmplogo = 0
		ShowTips = .T.
		ShowWindow = 2
		Top = -3
		wbmp = 0
		wbmplogo = .F.
		Width = 712
		_memberdata = <VFPData>
			<memberdata name="changecolors" type="method" display="ChangeColors" favorites="False"/>
			<memberdata name="calculateminmax" type="method" display="CalculateMinMax" favorites="False"/>
			<memberdata name="calculaterangeofcolors" type="method" display="CalculateRangeofColors" favorites="False"/>
			<memberdata name="loadlogo" type="method" display="LoadLogo" favorites="False"/>
			<memberdata name="loadmain" type="method" display="LoadMain" favorites="False"/>
			<memberdata name="processimage" type="method" display="ProcessImage"/>
		</VFPData>
	*</PropValue>

	ADD OBJECT 'Command1' AS commandbutton WITH ;
		Anchor = 12, ;
		Caption = "", ;
		Height = 25, ;
		Left = 12, ;
		Name = "Command1", ;
		Picture = (home() + "/samples/solution/bts.bmp"), ;
		PicturePosition = 1, ;
		PictureSpacing = 1, ;
		TabIndex = 6, ;
		ToolTipText = 'Select "Main or background picture"; Select "Logo Picture"; Go with your mouse over the logo picture, and click in any color to make it transparent ; The spinner determines the color range to apply transformation; Click "Draw Logos"', ;
		Top = 481, ;
		Width = 26
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command2' AS commandbutton WITH ;
		Anchor = 3, ;
		Caption = "Main Picture", ;
		FontSize = 8, ;
		Height = 25, ;
		Left = 12, ;
		Name = "Command2", ;
		Picture = (home() + "/graphics/bitmaps/outline/open.bmp"), ;
		PicturePosition = 1, ;
		PictureSpacing = 1, ;
		TabIndex = 1, ;
		Top = 12, ;
		Width = 98
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command3' AS commandbutton WITH ;
		Anchor = 3, ;
		Caption = "Logo Picture", ;
		FontSize = 8, ;
		Height = 25, ;
		Left = 12, ;
		Name = "Command3", ;
		Picture = (home() + "/graphics/bitmaps/outline/open.bmp"), ;
		PicturePosition = 1, ;
		PictureSpacing = 1, ;
		TabIndex = 3, ;
		Top = 48, ;
		Width = 98
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Container1' AS container WITH ;
		Anchor = 6, ;
		Height = 180, ;
		Left = 12, ;
		Name = "Container1", ;
		SpecialEffect = 0, ;
		TabIndex = 5, ;
		Top = 300, ;
		Visible = .T., ;
		Width = 132
		*< END OBJECT: BaseClass="container" />

	ADD OBJECT 'Container1.cmdDraw' AS commandbutton WITH ;
		Anchor = 12, ;
		Caption = "Draw Logos", ;
		Height = 25, ;
		Left = 12, ;
		Name = "cmdDraw", ;
		TabIndex = 2, ;
		Top = 144, ;
		Width = 98
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Container1.Label1' AS label WITH ;
		Caption = "Original Color", ;
		Height = 17, ;
		Left = 12, ;
		Name = "Label1", ;
		TabIndex = 4, ;
		Top = 4, ;
		Width = 84
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Container1.Label3' AS label WITH ;
		Caption = "%", ;
		Height = 17, ;
		Left = 65, ;
		Name = "Label3", ;
		TabIndex = 5, ;
		Top = 96, ;
		Width = 12
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Container1.Shape1' AS shape WITH ;
		BackColor = 255,255,255, ;
		Height = 60, ;
		Left = 12, ;
		Name = "Shape1", ;
		Top = 24, ;
		Width = 60
		*< END OBJECT: BaseClass="shape" />

	ADD OBJECT 'Container1.shpMax' AS shape WITH ;
		BackColor = 255,255,255, ;
		Height = 24, ;
		Left = 84, ;
		Name = "shpMax", ;
		Top = 60, ;
		Width = 24
		*< END OBJECT: BaseClass="shape" />

	ADD OBJECT 'Container1.shpMin' AS shape WITH ;
		BackColor = 255,255,255, ;
		Height = 24, ;
		Left = 84, ;
		Name = "shpMin", ;
		Top = 24, ;
		Width = 24
		*< END OBJECT: BaseClass="shape" />

	ADD OBJECT 'Container1.Spinner1' AS spinner WITH ;
		Height = 24, ;
		Increment =   1.00, ;
		KeyboardHighValue = 100, ;
		KeyboardLowValue = 0, ;
		Left = 12, ;
		Name = "Spinner1", ;
		SpinnerHighValue = 100.00, ;
		SpinnerLowValue =   0.00, ;
		TabIndex = 1, ;
		Top = 96, ;
		Value = 10, ;
		Width = 50
		*< END OBJECT: BaseClass="spinner" />

	ADD OBJECT 'Container1.Text1' AS textbox WITH ;
		Height = 37, ;
		Left = 24, ;
		Name = "Text1", ;
		SpecialEffect = 1, ;
		TabIndex = 3, ;
		Top = 36, ;
		Width = 36
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Image1' AS image WITH ;
		Anchor = 3, ;
		Height = 96, ;
		Left = 12, ;
		Name = "Image1", ;
		Stretch = 2, ;
		Top = 84, ;
		Width = 132
		*< END OBJECT: BaseClass="image" />

	ADD OBJECT 'Image2' AS image WITH ;
		Anchor = 3, ;
		Height = 96, ;
		Left = 12, ;
		Name = "Image2", ;
		Stretch = 2, ;
		Top = 192, ;
		Width = 132
		*< END OBJECT: BaseClass="image" />

	ADD OBJECT 'Imgcanvas1' AS imgcanvas WITH ;
		Anchor = 15, ;
		Height = 396, ;
		interpolationmode = 0, ;
		Left = 168, ;
		Name = "Imgcanvas1", ;
		smoothingmode = 3, ;
		Stretch = 1, ;
		Top = 84, ;
		Width = 540
		*< END OBJECT: ClassLib="..\source\gdiplusx.vcx" BaseClass="image" />

	ADD OBJECT 'txtFile' AS textbox WITH ;
		Anchor = 11, ;
		DisabledBackColor = 255,255,255, ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		FontSize = 8, ;
		Height = 25, ;
		Left = 120, ;
		Name = "txtFile", ;
		TabIndex = 2, ;
		Top = 12, ;
		Width = 588
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtLogoFile' AS textbox WITH ;
		Anchor = 11, ;
		DisabledBackColor = 255,255,255, ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		FontSize = 8, ;
		Height = 25, ;
		Left = 120, ;
		Name = "txtLogoFile", ;
		TabIndex = 4, ;
		Top = 48, ;
		Width = 588
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE calculaterangeofcolors
		WITH Thisform.Container1
			lnRGBClr = .Text1.BackColor
			.ShpMin.BackColor = Thisform.ChangeColors(lnRGBClr, - .Spinner1.Value)
			.ShpMax.BackColor = Thisform.ChangeColors(lnRGBClr, .Spinner1.Value)
		ENDWITH
	ENDPROC

	PROCEDURE changecolors
		LPARAMETERS tnRGB, tnLevel
		
		IF tnLevel = 0
			RETURN tnRGB
		ENDIF 
		
		tnLevel = tnLevel / 100
		
		LOCAL lnRed, lnGreen, lnBlue
		lnRed   = BITAND(tnRGB, 0x000000FF)
		lnGreen = BITRSHIFT(BITAND(tnRGB, 0x0000FF00), 8)
		lnBlue  = BITRSHIFT(BITAND(tnRGB, 0x00FF0000), 16)
		
		IF tnLevel > 0
			RETURN RGB( ;
				lnRed   + ((255 - lnRed)   * tnLevel) , ;
				lnGreen + ((255 - lnGreen) * tnLevel) , ;
				lnBlue  + ((255 - lnBlue)  * tnLevel) )
		ELSE 
			RETURN RGB( ;
				lnRed   + (lnRed   * tnLevel) , ;
				lnGreen + (lnGreen * tnLevel) , ;
				lnBlue  + (lnBlue  * tnLevel) )
		ENDIF 
	ENDPROC

	PROCEDURE Init
		DODEFAULT()
		Thisform.ProcessImage(LOCFILE("desert.jpg"), LOCFILE("foxprologo2.gif"))
	ENDPROC

	PROCEDURE loadlogo
		WITH Thisform
			.obmpLogo = _Screen.System.Drawing.Bitmap.New(Thisform.txtLogoFile.Value)
			.wBmpLogo = .oBmpLogo.Width
			.hBmpLogo = .oBmpLogo.Height
		ENDWITH
	ENDPROC

	PROCEDURE loadmain
		WITH Thisform
			.obmp = _Screen.System.Drawing.Bitmap.New(Thisform.txtFile.Value)
			.wBmp = .oBmp.Width
			.hBmp = .oBmp.Height
		ENDWITH
	ENDPROC

	PROCEDURE processimage
		LPARAMETERS tcBackGround, tcLogo
		
		IF NOT EMPTY(tcBackGround)
			Thisform.txtFile.Value = tcBackGround
			Thisform.Image1.Picture = tcBackGround
			Thisform.LoadMain()
		ENDIF
		
		IF NOT EMPTY(tcLogo)
			Thisform.txtLogoFile.Value = tcLogo
			Thisform.Image2.Picture = tcLogo
			Thisform.LoadLogo()
		ENDIF
		
		
	ENDPROC

	PROCEDURE Command1.Destroy
		_TOOLTIPTIMEOUT = This.nOriginalToolTipTime
	ENDPROC

	PROCEDURE Command1.Init
		This.AddProperty("nOriginalToolTipTime",0)
		This.nOriginalToolTipTime = _TOOLTIPTIMEOUT
		_TOOLTIPTIMEOUT = 0
	ENDPROC

	PROCEDURE Command2.Click
		lcFile = GETPICT()
		IF EMPTY(lcFile)
			RETURN
		ENDIF
		Thisform.ProcessImage(lcFile,"")
	ENDPROC

	PROCEDURE Command3.Click
		lcFile = GETPICT()
		IF EMPTY(lcFile)
			RETURN
		ENDIF
		Thisform.ProcessImage("",lcFile)
	ENDPROC

	PROCEDURE Container1.cmdDraw.Click
		IF EMPTY(Thisform.TxtFile.Value) OR EMPTY(Thisform.TxtLogoFile.Value)
			MESSAGEBOX("Picutes were not loaded !",48,"VFP-X GDI+ classes")
			RETURN
		ENDIF
		Thisform.CalculateRangeofColors()
		Thisform.ImgCanvas1.Draw()
	ENDPROC

	PROCEDURE Container1.Label3.Click
		This.Parent.Shape2.Click()
	ENDPROC

	PROCEDURE Container1.shpMax.Click
		This.BackColor = GETCOLOR()
	ENDPROC

	PROCEDURE Container1.shpMin.Click
		This.BackColor = GETCOLOR()
	ENDPROC

	PROCEDURE Container1.Spinner1.InteractiveChange
		Thisform.CalculateRangeofColors()
	ENDPROC

	PROCEDURE Container1.Text1.When
		RETURN .F.
		
	ENDPROC

	PROCEDURE Image2.MouseDown
		LPARAMETERS nButton, nShift, nXCoord, nYCoord
		
		IF VARTYPE(Thisform.oBmpLogo) <> "O"
			RETURN
		ENDIF 
		
		X1 = nXCoord - This.Left
		Y1 = nYCoord - This.Top
		
		XRatio = Thisform.wBmpLogo / This.Width
		YRatio = Thisform.hBmpLogo / This.Height
		
		LOCAL loBitmap as xfcBitmap
		loBitmap = Thisform.oBmpLogo
		
		LOCAL loColor as xfcColor
		loColor = loBitmap.GetPixel(X1 * xRatio,Y1 * yRatio)
		lnRGBClr = RGB(loColor.R, loColor.G, loColor.B)
		
		WITH Thisform.Container1
			.Text1.BackColor = lnRGBClr
			.Shape1.BackColor = lnRGBClr
		
			Thisform.CalculateRangeofColors()
		ENDWITH
	ENDPROC

	PROCEDURE Image2.MouseLeave
		LPARAMETERS nButton, nShift, nXCoord, nYCoord
		Thisform.Container1.Text1.BackColor = Thisform.Container1.Shape1.BackColor 
	ENDPROC

	PROCEDURE Image2.MouseMove
		LPARAMETERS nButton, nShift, nXCoord, nYCoord
		
		IF VARTYPE(Thisform.oBmpLogo) <> "O"
			RETURN
		ENDIF 
		
		X1 = nXCoord - This.Left
		Y1 = nYCoord - This.Top
		
		XRatio = Thisform.wBmpLogo / This.Width
		YRatio = Thisform.hBmpLogo / This.Height
		
		WITH _SCREEN.System.Drawing
			LOCAL loBitmap as xfcBitmap
			loBitmap = Thisform.oBmpLogo
		
			LOCAL loColor as xfcColor
			loColor = loBitmap.GetPixel(X1 * xRatio,Y1 * yRatio)
			lnRGBClr = RGB(loColor.R, loColor.G, loColor.B)
		
			Thisform.Container1.Text1.BackColor = lnRGBClr
		ENDWITH
		
	ENDPROC

	PROCEDURE Imgcanvas1.beforedraw
		IF EMPTY(Thisform.txtFile.Value)
			RETURN
		ENDIF
		
		LOCAL loAttr AS xfcImageAttributes
		LOCAL loOldColor as xfcColor
		LOCAL loNewColor as xfcColor
		
		This.Clear()
		
		WITH _SCREEN.System.Drawing
		
			*!*	Draw the main image
			This.oGfx.DrawImage(Thisform.oBmp, This.Rectangle) 
			
			
			
			*!* Example 1 
			*!* Original Image 
			*!* Position : Top Left 
			*!* Draw Logo without any transformation
			This.oGfx.DrawImage(Thisform.oBmpLogo, 0, 0) 
		
		
			*!* Example 2 
			*!* Logo Image with 50% transparency 
			*!* Position : Top Right 
			*!* The position (4,4) of the matrix is responsible for the opacity 
		
			LOCAL loClrMatrix AS xfcColorMatrix
			loClrMatrix = .Imaging.ColorMatrix.New( ; 
		        1, 0, 0, 0  , 0, ; 
		        0, 1, 0, 0  , 0, ; 
		        0, 0, 1, 0  , 0, ;
		        0, 0, 0, 0.5, 0, ; 
		        0, 0, 0, 0  , 0)
		
			loAttr = .Imaging.ImageAttributes.New() 
			loAttr.SetColorMatrix(loClrMatrix)
			LOCAL loRect as xfcRectangle
			loRect = _Screen.System.Drawing.Rectangle.New(Thisform.oBmpLogo.Width, Thisform.oBmpLogo.Height)
			loRect.X = This.Width - Thisform.wbmplogo 
			loRect.Y = 0
			loRect.Width  = Thisform.wbmplogo 
			loRect.Height = Thisform.hbmplogo 
			
			This.oGfx.DrawImage(Thisform.oBmpLogo, loRect, Thisform.oBmpLogo.GetBounds(), 2, loAttr) 
			loAttr = NULL
			
		
			*!* Example 3 
			*!* Logo Image with NO transparency 
			*!* Convert selected color with ALPHA 255 (Opaque) to TRANSPARENT ALPHA (0) 
			*!* Position : Bottom Left 
			loOldColorMin = .Color.FromRgb(Thisform.Container1.ShpMin.BackColor)
			loOldColorMax = .Color.FromRgb(Thisform.Container1.ShpMax.BackColor)
		
			loAttr = .Imaging.ImageAttributes.New() 
			loAttr.SetColorKey(loOldColorMin, loOldColorMax)
			loRect.X = 0 
			loRect.Y = This.Height - Thisform.hBmplogo 
			loRect.Width  = Thisform.wbmplogo 
			loRect.Height = Thisform.hbmplogo 
		
			This.oGfx.DrawImage(Thisform.oBmpLogo, loRect, Thisform.oBmpLogo.GetBounds(), 2, loAttr) 
			loAttr = NULL
		
		
			*!* Example 4 
			*!* Image with 50% transparency using ColorMAtrix 
			*!* Convert selected color with ALPHA 255 (Opaque) to TRANSPARENT ALPHA (0) 
			*!* Position : Bottom Right 
		
			loAttr = .Imaging.ImageAttributes.New() 
			loAttr.SetColorMatrix(loClrMatrix)
			loAttr.SetColorKey(loOldColorMin, loOldColorMax)
		
			loRect.X = This.Width - Thisform.wbmplogo 
			loRect.Y = This.Height - Thisform.hBmplogo 
			loRect.Width  = Thisform.wbmplogo 
			loRect.Height = Thisform.hbmplogo 
			This.oGfx.DrawImage(Thisform.oBmpLogo, loRect, Thisform.oBmpLogo.GetBounds(), 2, loAttr) 
			loAttr = NULL
		
		
		ENDWITH
		
		
		RETURN
	ENDPROC

ENDDEFINE
