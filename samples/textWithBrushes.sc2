*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.20" SourceFile="textwithbrushes.scx" CPID="1252" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	*<PropValue>
		DataSource = .NULL.
		Height = 200
		Left = 1
		Name = "Dataenvironment"
		Top = 220
		Width = 520
	*</PropValue>

ENDDEFINE

DEFINE CLASS form1 AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Imgcanvas1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtText" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shape1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shape2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="TxtFontName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdGetFont" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="TxtFontSize" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="TxtFontStyle" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SpnHatch" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SpnGradMode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Imgcanvas2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Image1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Imgcanvas3" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: mode
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		Caption = "Text with Different Brushes"
		DoCreate = .T.
		Height = 419
		Left = 2
		mode = 0
		Name = "Form1"
		Top = 10
		Width = 674
		_memberdata = <VFPData>
			<memberdata name="foomethod" type="method"     display="fooMethod"     favorites="True"/>
			<memberdata name="Form1" type="property" display="Form1" favorites="True"/>
			<memberdata name="_memberdata" type="property" display="_MemberData" favorites="True"/>
			<memberdata name="baseclass" type="property" display="BaseClasS" favorites="True"/>
			<memberdata name="error" type="method" display="eRRor" favorites="True"/>
		</VFPData>
	*</PropValue>

	ADD OBJECT 'cmdGetFont' AS commandbutton WITH ;
		Caption = "Choose Font", ;
		Height = 25, ;
		Left = 12, ;
		Name = "cmdGetFont", ;
		TabIndex = 3, ;
		Top = 12, ;
		Width = 108
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command1' AS commandbutton WITH ;
		Anchor = 1, ;
		Caption = "Main Color", ;
		Height = 25, ;
		Left = 12, ;
		Name = "Command1", ;
		TabIndex = 4, ;
		Top = 108, ;
		Width = 108
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command2' AS commandbutton WITH ;
		Anchor = 1, ;
		Caption = "Secondary Color", ;
		Height = 25, ;
		Left = 12, ;
		Name = "Command2", ;
		TabIndex = 3, ;
		Top = 132, ;
		Width = 108
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command3' AS commandbutton WITH ;
		Anchor = 1, ;
		Caption = "Get Picture", ;
		Height = 25, ;
		Left = 12, ;
		Name = "Command3", ;
		TabIndex = 4, ;
		Top = 348, ;
		Width = 108
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Image1' AS image WITH ;
		Height = 60, ;
		Left = 132, ;
		Name = "Image1", ;
		Picture = image\foxprologo2.png, ;
		Stretch = 1, ;
		Top = 348, ;
		Width = 72
		*< END OBJECT: BaseClass="image" />

	ADD OBJECT 'Imgcanvas1' AS imgcanvas WITH ;
		Anchor = 15, ;
		Height = 60, ;
		Left = 240, ;
		Name = "Imgcanvas1", ;
		smoothingmode = 0, ;
		Top = 108, ;
		Width = 420
		*< END OBJECT: ClassLib="..\gdiplusx.vcx" BaseClass="image" />

	ADD OBJECT 'Imgcanvas2' AS imgcanvas WITH ;
		Anchor = 15, ;
		Height = 60, ;
		Left = 240, ;
		Name = "Imgcanvas2", ;
		smoothingmode = 0, ;
		Top = 228, ;
		Width = 420
		*< END OBJECT: ClassLib="..\gdiplusx.vcx" BaseClass="image" />

	ADD OBJECT 'Imgcanvas3' AS imgcanvas WITH ;
		Anchor = 15, ;
		Height = 60, ;
		Left = 240, ;
		Name = "Imgcanvas3", ;
		smoothingmode = 0, ;
		Top = 348, ;
		Width = 420
		*< END OBJECT: ClassLib="..\gdiplusx.vcx" BaseClass="image" />

	ADD OBJECT 'Label1' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Enter text below", ;
		Height = 17, ;
		Left = 240, ;
		Name = "Label1", ;
		TabIndex = 5, ;
		Top = 12, ;
		Width = 88
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label2' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Linear Gradient Brush", ;
		Height = 17, ;
		Left = 240, ;
		Name = "Label2", ;
		TabIndex = 5, ;
		Top = 84, ;
		Width = 123
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label3' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Hatch Brush", ;
		Height = 17, ;
		Left = 240, ;
		Name = "Label3", ;
		TabIndex = 5, ;
		Top = 204, ;
		Width = 70
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label4' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Hatch Brush", ;
		Height = 17, ;
		Left = 48, ;
		Name = "Label4", ;
		TabIndex = 5, ;
		Top = 228, ;
		Width = 70
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label5' AS label WITH ;
		Anchor = 3, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Gradient Mode", ;
		Height = 17, ;
		Left = 36, ;
		Name = "Label5", ;
		Top = 168, ;
		Width = 82
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label6' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Texture Brush", ;
		Height = 17, ;
		Left = 240, ;
		Name = "Label6", ;
		TabIndex = 5, ;
		Top = 324, ;
		Width = 78
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Shape1' AS shape WITH ;
		BackColor = 0,0,128, ;
		Height = 25, ;
		Left = 132, ;
		Name = "Shape1", ;
		Top = 108, ;
		Width = 25
		*< END OBJECT: BaseClass="shape" />

	ADD OBJECT 'Shape2' AS shape WITH ;
		BackColor = 255,128,64, ;
		Height = 25, ;
		Left = 132, ;
		Name = "Shape2", ;
		Top = 132, ;
		Width = 25
		*< END OBJECT: BaseClass="shape" />

	ADD OBJECT 'SpnGradMode' AS spinner WITH ;
		Anchor = 3, ;
		Height = 25, ;
		KeyboardHighValue = 3, ;
		KeyboardLowValue = 0, ;
		Left = 132, ;
		Name = "SpnGradMode", ;
		SpinnerHighValue =   3.00, ;
		SpinnerLowValue =   0.00, ;
		Top = 168, ;
		Value = 0, ;
		Width = 36
		*< END OBJECT: BaseClass="spinner" />

	ADD OBJECT 'SpnHatch' AS spinner WITH ;
		Height = 24, ;
		Increment =   1.00, ;
		KeyboardHighValue = 52, ;
		KeyboardLowValue = 0, ;
		Left = 132, ;
		Name = "SpnHatch", ;
		SpinnerHighValue =  52.00, ;
		SpinnerLowValue =   0.00, ;
		Top = 228, ;
		Value = 21, ;
		Width = 48
		*< END OBJECT: BaseClass="spinner" />

	ADD OBJECT 'TxtFontName' AS textbox WITH ;
		Height = 25, ;
		Left = 12, ;
		Name = "TxtFontName", ;
		TabIndex = 4, ;
		Top = 48, ;
		Value = Arial, ;
		Width = 108
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'TxtFontSize' AS textbox WITH ;
		Alignment = 3, ;
		Height = 25, ;
		Left = 132, ;
		Name = "TxtFontSize", ;
		TabIndex = 5, ;
		Top = 48, ;
		Value = 24, ;
		Width = 30
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'TxtFontStyle' AS textbox WITH ;
		Height = 25, ;
		Left = 168, ;
		Name = "TxtFontStyle", ;
		TabIndex = 6, ;
		Top = 48, ;
		Value = B, ;
		Width = 24
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtText' AS textbox WITH ;
		Anchor = 131, ;
		Height = 25, ;
		Left = 240, ;
		Name = "txtText", ;
		TabIndex = 1, ;
		Top = 36, ;
		Value = GdiPlus-X is Cool !, ;
		Width = 420
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE cmdGetFont.Click
		lcFont = GETFONT()
		Thisform.TxtFontName.Value = GETWORDNUM(lcFont,1,',')
		Thisform.TxtFontSize.Value = VAL(GETWORDNUM(lcFont,2,','))
		Thisform.TxtFontStyle.Value = GETWORDNUM(lcFont,3,',')
		Thisform.Imgcanvas1.Draw()
		Thisform.Imgcanvas2.Draw()
		Thisform.Imgcanvas3.Draw()
		
	ENDPROC

	PROCEDURE Command1.Click
		Thisform.Shape1.BackColor = GETCOLOR(Thisform.Shape1.BackColor)
		Thisform.Imgcanvas1.Draw()
		Thisform.Imgcanvas2.Draw()
	ENDPROC

	PROCEDURE Command2.Click
		Thisform.Shape2.BackColor = GETCOLOR(Thisform.Shape2.BackColor)
		Thisform.Imgcanvas1.Draw()
		Thisform.Imgcanvas2.Draw()
	ENDPROC

	PROCEDURE Command3.Click
		Thisform.Image1.Picture = GETPICT()
		Thisform.Imgcanvas3.Draw()
	ENDPROC

	PROCEDURE Imgcanvas1.beforedraw
		*!*	Based on Tom Archer's article at CodeGuru.com
		*!*	http://www.codeguru.com/columns/dotnettips/article.php/c8441/
		
		LOCAL loFont AS xfcFont
		LOCAL loBrush AS xfcLinearGradientBrush
		LOCAL loRectangleF As xfcRectangleF
		LOCAL loSizeF AS xfcSizeF
		
		WITH _SCREEN.SYSTEM.Drawing
			This.Clear()
		
			LOCAL lcStyle
			lcStyle = Thisform.TxtFontStyle.Value
			DO CASE
			CASE lcStyle == "B"
				loStyle = .FontStyle.Bold 
			CASE lcStyle == "I"
				loStyle = .FontStyle.Italic
			CASE lcStyle == "BI"
				loStyle = .FontStyle.BoldItalic
			OTHERWISE  
				loStyle = .FontStyle.Regular
			ENDCASE
			
			loFont = .Font.New(Thisform.TxtFontName.Value, Thisform.TxtFontSize.Value, loStyle)
		
			loSizeF = This.oGfx.MeasureString(Thisform.TxtText.Value, loFont)
			loRectangleF = _screen.system.Drawing.RectangleF.New(0,0,loSizeF.Width, loSizeF.Height)
			
			loBrush = .Drawing2D.LinearGradientBrush.New(loRectangleF,;
				.Color.FromRGB(Thisform.Shape1.BackColor), ;
				.Color.FromRGB(Thisform.Shape2.BackColor),;
				Thisform.SpnGradMode.Value)
		
			This.oGfx.DrawString(Thisform.TxtText.Value, loFont, ;
				loBrush, loRectangleF)
		
		ENDWITH
		RETURN
	ENDPROC

	PROCEDURE Imgcanvas2.beforedraw
		*!*	Based on Tom Archer's article at CodeGuru.com
		*!*	http://www.codeguru.com/columns/dotnettips/article.php/c8441/
		
		LOCAL loFont AS xfcFont
		LOCAL loBrush AS xfcHatchBrush
		
		WITH _SCREEN.SYSTEM.Drawing
			This.Clear()
		
			LOCAL lcStyle
			lcStyle = Thisform.TxtFontStyle.Value
			DO CASE
			CASE lcStyle == "B"
				loStyle = .FontStyle.Bold 
			CASE lcStyle == "I"
				loStyle = .FontStyle.Italic
			CASE lcStyle == "BI"
				loStyle = .FontStyle.BoldItalic
			OTHERWISE  
				loStyle = .FontStyle.Regular
			ENDCASE
			
			loFont = .Font.New(Thisform.TxtFontName.Value, Thisform.TxtFontSize.Value, loStyle)
			lnStyle = Thisform.SpnHatch.Value
			loBrush = .Drawing2D.HatchBrush.New(lnStyle, ;
				.Color.FromRGB(Thisform.Shape2.BackColor), ;
				.Color.FromRGB(Thisform.Shape1.BackColor))
		
			This.oGfx.DrawString(Thisform.TxtText.Value, loFont, ;
				loBrush, This.Rectangle)
		
		ENDWITH
		RETURN
	ENDPROC

	PROCEDURE Imgcanvas3.beforedraw
		*!*	Based on Tom Archer's article at CodeGuru.com
		*!*	http://www.codeguru.com/columns/dotnettips/article.php/c8441/
		
		LOCAL lcPicture
		lcPicture = This.Parent.Image1.Picture
		IF EMPTY(lcPicture) OR NOT FILE(lcPicture)
			WAIT WINDOW "No picture was selected !"
			RETURN
		ENDIF
		
		LOCAL loFont AS xfcFont
		LOCAL loBrush AS xfcTextureBrush
		
		WITH _SCREEN.SYSTEM.Drawing
			This.Clear()
		
			LOCAL lcStyle
			lcStyle = Thisform.TxtFontStyle.Value
			DO CASE
			CASE lcStyle == "B"
				loStyle = .FontStyle.Bold 
			CASE lcStyle == "I"
				loStyle = .FontStyle.Italic
			CASE lcStyle == "BI"
				loStyle = .FontStyle.BoldItalic
			OTHERWISE  
				loStyle = .FontStyle.Regular
			ENDCASE
			
			loFont = .Font.New(Thisform.TxtFontName.Value, Thisform.TxtFontSize.Value, loStyle)
			lnStyle = Thisform.SpnHatch.Value
			loBrush = .TextureBrush.New(.Image.FromFile(lcPicture))
		
			This.oGfx.DrawString(Thisform.TxtText.Value, loFont, ;
				loBrush, This.Rectangle)
		
		ENDWITH
		RETURN
	ENDPROC

	PROCEDURE Shape1.Click
		This.Parent.Command1.Click
	ENDPROC

	PROCEDURE Shape2.Click
		This.Parent.Command2.Click
	ENDPROC

	PROCEDURE SpnGradMode.InteractiveChange
		Thisform.imgcanvas1.Draw()
	ENDPROC

	PROCEDURE SpnHatch.InteractiveChange
		Thisform.Imgcanvas2.Draw()
	ENDPROC

	PROCEDURE TxtFontName.Valid
		Thisform.Imgcanvas1.Draw()
		Thisform.Imgcanvas2.Draw()
		
	ENDPROC

	PROCEDURE TxtFontSize.Valid
		Thisform.Imgcanvas1.Draw()
		Thisform.Imgcanvas2.Draw()
		
	ENDPROC

	PROCEDURE TxtFontStyle.Valid
		Thisform.Imgcanvas1.Draw()
		Thisform.Imgcanvas2.Draw()
		
	ENDPROC

	PROCEDURE txtText.InteractiveChange
		LPARAMETERS nKeyCode, nShiftAltCtrl
		DODEFAULT()
		Thisform.Imgcanvas1.Draw()
		Thisform.Imgcanvas2.Draw()
	ENDPROC

ENDDEFINE
