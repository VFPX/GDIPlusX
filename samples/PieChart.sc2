*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.20" SourceFile="piechart.scx" CPID="1252" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	*<PropValue>
		DataSource = .NULL.
		Height = 0
		Left = 0
		Name = "Dataenvironment"
		Top = 0
		Width = 0
	*</PropValue>

ENDDEFINE

DEFINE CLASS form1 AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Imgcanvas1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column1.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column2.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column4.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column4.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column4.Check1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column5.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grid1.Column5.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Optiongroup1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Spinner1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label1" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: changecolor
	*</DefinedPropArrayMethod>

	*<PropValue>
		Caption = "Pie Charts"
		DoCreate = .T.
		Height = 453
		Left = 43
		MinHeight = 230
		MinWidth = 380
		Name = "Form1"
		Top = -6
		Width = 512
	*</PropValue>

	ADD OBJECT 'Grid1' AS grid WITH ;
		AllowAddNew = .T., ;
		Anchor = 6, ;
		ColumnCount = 4, ;
		Height = 148, ;
		Left = 0, ;
		Name = "Grid1", ;
		Panel = 1, ;
		RecordSource = "sales", ;
		TabIndex = 1, ;
		Top = 300, ;
		Width = 278, ;
		Column1.ControlSource = "sales.clegend", ;
		Column1.Name = "Column1", ;
		Column2.ControlSource = "sales.nvalue", ;
		Column2.InputMask = "999,999.99", ;
		Column2.Name = "Column2", ;
		Column3.Alignment = 2, ;
		Column3.ColumnOrder = 4, ;
		Column3.ControlSource = "sales.ldetach", ;
		Column3.CurrentControl = "Check1", ;
		Column3.Name = "Column4", ;
		Column3.Sparse = .F., ;
		Column3.Width = 54, ;
		Column4.ColumnOrder = 3, ;
		Column4.ControlSource = "''", ;
		Column4.DynamicBackColor = '"sales.nColor"', ;
		Column4.Name = "Column5", ;
		Column4.Sparse = .F., ;
		Column4.Width = 31
		*< END OBJECT: BaseClass="grid" />

	ADD OBJECT 'Grid1.Column1.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "Legend", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grid1.Column1.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Grid1.Column2.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "Value", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grid1.Column2.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Grid1.Column4.Check1' AS checkbox WITH ;
		Alignment = 0, ;
		Caption = "", ;
		Centered = .T., ;
		Height = 17, ;
		Left = 41, ;
		Name = "Check1", ;
		Top = 23, ;
		Width = 60
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'Grid1.Column4.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "Detach", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grid1.Column4.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Grid1.Column5.Header1' AS header WITH ;
		Caption = "", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grid1.Column5.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Imgcanvas1' AS imgcanvas WITH ;
		Anchor = 15, ;
		Height = 180, ;
		Left = 0, ;
		Name = "Imgcanvas1", ;
		Top = 0, ;
		Width = 180
		*< END OBJECT: ClassLib="..\source\gdiplusx.vcx" BaseClass="image" />

	ADD OBJECT 'Label1' AS label WITH ;
		Anchor = 12, ;
		BackStyle = 0, ;
		Caption = "GradientLevel (-10  +10)", ;
		FontBold = .T., ;
		ForeColor = 255,0,0, ;
		Height = 33, ;
		Left = 321, ;
		Name = "Label1", ;
		TabIndex = 5, ;
		Top = 375, ;
		Visible = .F., ;
		Width = 85, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Optiongroup1' AS optiongroup WITH ;
		Anchor = 12, ;
		AutoSize = .T., ;
		ButtonCount = 3, ;
		Height = 65, ;
		Left = 314, ;
		Name = "Optiongroup1", ;
		TabIndex = 2, ;
		Top = 303, ;
		Value = 1, ;
		Width = 186, ;
		Option1.AutoSize = .F., ;
		Option1.Caption = "Colored Solid Brush", ;
		Option1.Height = 17, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Style = 0, ;
		Option1.Top = 5, ;
		Option1.Value = 1, ;
		Option1.Width = 176, ;
		Option2.AutoSize = .F., ;
		Option2.Caption = "Colored Gradient Path Brush", ;
		Option2.Height = 17, ;
		Option2.Left = 5, ;
		Option2.Name = "Option2", ;
		Option2.Style = 0, ;
		Option2.Top = 24, ;
		Option2.Width = 176, ;
		Option3.AutoSize = .F., ;
		Option3.Caption = "Monochrome (HatchBrush)", ;
		Option3.Height = 17, ;
		Option3.Left = 5, ;
		Option3.Name = "Option3", ;
		Option3.Style = 0, ;
		Option3.Top = 43, ;
		Option3.Width = 176
		*< END OBJECT: BaseClass="optiongroup" />

	ADD OBJECT 'Spinner1' AS spinner WITH ;
		Anchor = 12, ;
		Height = 25, ;
		KeyboardHighValue = 10, ;
		KeyboardLowValue = -10, ;
		Left = 405, ;
		Name = "Spinner1", ;
		SpinnerHighValue =  10.00, ;
		SpinnerLowValue = -10.00, ;
		TabIndex = 3, ;
		Top = 375, ;
		Value = 5, ;
		Visible = .F., ;
		Width = 54
		*< END OBJECT: BaseClass="spinner" />
	
	PROCEDURE changecolor
		LPARAMETERS tnRGB, tnLevel
		
		IF tnLevel = 0
			RETURN tnRGB
		ENDIF 
		
		tnLevel = tnLevel / 100
		
		LOCAL lnRed, lnGreen, lnBlue
		lnRed   = BITAND(tnRGB, 0x000000FF)
		lnGreen = BITRSHIFT(BITAND(tnRGB, 0x0000FF00), 8)
		lnBlue  = BITRSHIFT(BITAND(tnRGB, 0x00FF0000), 16)
		
		IF tnLevel > 0
			RETURN RGB( ;
				lnRed   + ((255 - lnRed)   * tnLevel) , ;
				lnGreen + ((255 - lnGreen) * tnLevel) , ;
				lnBlue  + ((255 - lnBlue)  * tnLevel) )
		ELSE 
			RETURN RGB( ;
				lnRed   + (lnRed   * tnLevel) , ;
				lnGreen + (lnGreen * tnLevel) , ;
				lnBlue  + (lnBlue  * tnLevel) )
		ENDIF 
	ENDPROC

	PROCEDURE Load
		SET TALK OFF
		
		CREATE CURSOR sales (nValue n(8,2), cLegend c(6), lDetach l, nColor i)
		INSERT INTO sales VALUES (250, "JAN", .F., RGB(0,0,255)   )
		INSERT INTO sales VALUES (128, "FEB", .T., RGB(0,255,255) )
		INSERT INTO sales VALUES ( 90, "MAR", .F., RGB(255,0,255) )
		INSERT INTO sales VALUES (330, "APR", .F., RGB(255,160,60))
		INSERT INTO sales VALUES (250, "MAY", .T., RGB(255,255,0) )
		INSERT INTO sales VALUES (150, "JUN", .F., RGB(0,255,64)  )
		INSERT INTO sales VALUES (180, "JUL", .F., RGB(255,0,0)   )
		INSERT INTO sales VALUES (100, "AUG", .T., RGB(128,128,128))
		SELECT sales
		GO TOP 
		
	ENDPROC

	PROCEDURE Grid1.Column1.Text1.Valid
		Thisform.Imgcanvas1.Draw()
	ENDPROC

	PROCEDURE Grid1.Column2.Text1.Valid
		Thisform.Imgcanvas1.Draw()
	ENDPROC

	PROCEDURE Grid1.Column4.Check1.Click
		replace sales.lDetach WITH sales.lDetach
		Thisform.Imgcanvas1.Draw()
		NODEFAULT 
	ENDPROC

	PROCEDURE Grid1.Column5.Text1.DblClick
		lnColor = sales.nColor
		replace sales.nColor WITH GETCOLOR(lnColor)
		This.Refresh 
		Thisform.Imgcanvas1.Draw()
	ENDPROC

	PROCEDURE Grid1.Init
		This.Column5.DynamicBackColor = 'sales.nColor'
	ENDPROC

	PROCEDURE Imgcanvas1.beforedraw
		LOCAL loSolidBrush AS xfcSolidBrush
		LOCAL loGBrush AS xfcLinearGradientBrush
		LOCAL loHatchBrush as xfcHatchBrush
		
		LOCAL loPen AS xfcPen
		LOCAL loFont AS xfcFont
		
		LOCAL lnX, lnY, x1, y1, lnWidth, lnHeight, lnAngle, wImg, hImg
		LOCAL lnDetachPixels, lnLegendWidth 
		LOCAL lnTotal, lnStart, lnSweep
		
		WITH _SCREEN.SYSTEM.Drawing
		
			CALCULATE SUM(sales.nValue) TO lnTotal
		
			lnDetachPixels = 30
			lnLegendWidth = 120
		
			lnX = 0 + lnDetachPixels + 5
			lnY = 0 + lnDetachPixels + 5
		
			wImg = THIS.WIDTH - (lnDetachPixels * 2) - 10 - lnLegendWidth
			hImg = THIS.HEIGHT - (lnDetachPixels * 2) - 10
		
		* Draw the pie
			lnStart = 270
			lnWidth = wImg
			lnHeight = hImg
		
			THIS.CLEAR()
			THISFORM.CLS()
		
			SCAN
				lnSweep = sales.nValue / lnTotal * 360
		
				IF sales.lDetach = .T.
					lnDetachAngle = 360 - (lnStart + (lnSweep / 2))
					x1 = lnX + (COS(DTOR(lnDetachAngle)) * lnDetachPixels)
					y1 = lnY - (SIN(DTOR(lnDetachAngle)) * lnDetachPixels)
				ELSE
					x1 = lnX
					y1 = lnY
				ENDIF
		
				DO CASE
					CASE THISFORM.Optiongroup1.VALUE = 1 && Solid Brush
						loSolidBrush = .SolidBrush.New(.COLOR.FromRGB(sales.nColor))
						loMainBrush = loSolidBrush
		
					CASE THISFORM.Optiongroup1.VALUE = 2 && Gradient Path Brush
		
						loPath = .Drawing2D.GraphicsPath.New()
						loPath.AddEllipse(x1, y1, lnWidth, lnHeight)
		
						loPathGradBrush = .Drawing2D.PathGradientBrush.New(loPath)
						loPathGradBrush.CenterColor = .COLOR.FromRGB(THISFORM.ChangeColor(sales.nColor,THISFORM.Spinner1.VALUE * 10))
		
						loPathGradBrush.SurroundColors[1] = .Color.FromRGB(sales.nColor)
		
						loMainBrush = loPathGradBrush
		
					CASE THISFORM.Optiongroup1.VALUE = 3 && Monochrome - HatchBrush
						loHatchBrush = .Drawing2D.HatchBrush.New( ;
							RECNO()*2, ; && HatchStyle
						.COLOR.Black, ; && ForeColor
						.COLOR.White ) && BackColor
						loMainBrush = loHatchBrush
				ENDCASE
		
				loPen   = .PEN.New(.COLOR.Black)
		
				THIS.oGfx.FillPie(loMainBrush, x1, y1, lnWidth, lnHeight, lnStart, lnSweep)
				THIS.oGfx.DrawPie(loPen, x1, y1, lnWidth, lnHeight, lnStart, lnSweep)
				lnStart = lnStart + lnSweep
			ENDSCAN
		
		
		*** Draw Legends
		
			x1 = This.Width - lnLegendWidth + 15
			y1 = 30
			lnWidth = 20
			lnHeight = 20
		
			loFont = .Font.New("Arial",10)
			loBlackBrush = .Brushes.Black
		
			SCAN
		
				DO CASE
					CASE THISFORM.Optiongroup1.VALUE = 1 && Solid Brush
						loSolidBrush = .SolidBrush.New(.COLOR.FromRGB(sales.nColor))
						loMainBrush = loSolidBrush
		
					CASE THISFORM.Optiongroup1.VALUE = 2 && Gradient Path Brush
		
						loPath = .Drawing2D.GraphicsPath.New()
						loPath.AddRectangle(x1, y1, lnWidth, lnHeight)
		
						loPathGradBrush = .Drawing2D.PathGradientBrush.New(loPath)
						loPathGradBrush.CenterColor = .COLOR.FromRGB(THISFORM.ChangeColor(sales.nColor,THISFORM.Spinner1.VALUE * 10))
		
						loPathGradBrush.SurroundColors[1] = .Color.FromRGB(sales.nColor)
		
						loMainBrush = loPathGradBrush
		
					CASE THISFORM.Optiongroup1.VALUE = 3 && Monochrome - HatchBrush
						loHatchBrush = .Drawing2D.HatchBrush.New( ;
							RECNO()*2, ; && HatchStyle
						.COLOR.Black, ; && ForeColor
						.COLOR.White ) && BackColor
						loMainBrush = loHatchBrush
				ENDCASE
		
				loPen   = .PEN.New(.COLOR.Black)
		
				THIS.oGfx.FillRectangle(loMainBrush, x1, y1, lnWidth, lnHeight)
				THIS.oGfx.DrawRectangle(loPen, x1, y1, lnWidth, lnHeight)
		
				THIS.oGfx.DrawString(sales.cLegend, loFont, loBlackBrush, x1 + 28, y1 + 3)
		
				y1 = y1 + 30
		
			ENDSCAN
			GO TOP
		
		ENDWITH
		RETURN
		
	ENDPROC

	PROCEDURE Imgcanvas1.setup
		This.Top = 0
		This.Left = 0
		This.Width = Thisform.Width
		This.Height = Thisform.Height - Thisform.Grid1.Height - 5
		This.ZOrder(1)
		IF NOT DODEFAULT()
			RETURN .F.
		ENDIF
		
	ENDPROC

	PROCEDURE Optiongroup1.InteractiveChange
		IF This.Value = 2 && Gradient
			Thisform.Label1.Visible = .T.
			Thisform.Spinner1.Visible = .T.
		ELSE
			Thisform.Label1.Visible = .F.
			Thisform.Spinner1.Visible = .F.
		ENDIF
		
		This.Parent.imgcanvas1.Draw()
	ENDPROC

	PROCEDURE Spinner1.InteractiveChange
		This.Parent.imgcanvas1.Draw()
	ENDPROC

ENDDEFINE
