*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.20" SourceFile="textreflectedsheared.scx" CPID="1252" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	*<PropValue>
		DataSource = .NULL.
		Height = 200
		Left = 1
		Name = "Dataenvironment"
		Top = 220
		Width = 520
	*</PropValue>

ENDDEFINE

DEFINE CLASS form1 AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Imgcanvas1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtText" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shape1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shape2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="TxtFontName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdGetFont" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="TxtFontSize" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="TxtFontStyle" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Imgcanvas2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Spinner3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label4" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: mode
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		Caption = "Reflected Text"
		DoCreate = .T.
		Height = 305
		Left = 2
		mode = 0
		Name = "Form1"
		Top = 10
		Width = 674
		_memberdata = <VFPData>
			<memberdata name="foomethod" type="method"     display="fooMethod"     favorites="True"/>
			<memberdata name="Form1" type="property" display="Form1" favorites="True"/>
			<memberdata name="_memberdata" type="property" display="_MemberData" favorites="True"/>
			<memberdata name="baseclass" type="property" display="BaseClasS" favorites="True"/>
			<memberdata name="error" type="method" display="eRRor" favorites="True"/>
		</VFPData>
	*</PropValue>

	ADD OBJECT 'cmdGetFont' AS commandbutton WITH ;
		Caption = "Choose Font", ;
		Height = 25, ;
		Left = 12, ;
		Name = "cmdGetFont", ;
		TabIndex = 3, ;
		Top = 12, ;
		Width = 108
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command1' AS commandbutton WITH ;
		Anchor = 1, ;
		Caption = "Main Color", ;
		Height = 25, ;
		Left = 12, ;
		Name = "Command1", ;
		TabIndex = 4, ;
		Top = 108, ;
		Width = 108
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command2' AS commandbutton WITH ;
		Anchor = 1, ;
		Caption = "Reflected Color", ;
		Height = 25, ;
		Left = 12, ;
		Name = "Command2", ;
		TabIndex = 3, ;
		Top = 144, ;
		Width = 108
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Imgcanvas1' AS imgcanvas WITH ;
		Anchor = 15, ;
		Height = 60, ;
		Left = 240, ;
		Name = "Imgcanvas1", ;
		smoothingmode = 0, ;
		Top = 108, ;
		Width = 420
		*< END OBJECT: ClassLib="..\source\gdiplusx.vcx" BaseClass="image" />

	ADD OBJECT 'Imgcanvas2' AS imgcanvas WITH ;
		Anchor = 15, ;
		Height = 60, ;
		Left = 240, ;
		Name = "Imgcanvas2", ;
		smoothingmode = 0, ;
		Top = 228, ;
		Width = 420
		*< END OBJECT: ClassLib="..\source\gdiplusx.vcx" BaseClass="image" />

	ADD OBJECT 'Label1' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Enter text below", ;
		Height = 17, ;
		Left = 240, ;
		Name = "Label1", ;
		TabIndex = 5, ;
		Top = 12, ;
		Width = 88
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label2' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Reflected", ;
		Height = 17, ;
		Left = 240, ;
		Name = "Label2", ;
		TabIndex = 5, ;
		Top = 84, ;
		Width = 54
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label3' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Reflected and sheared", ;
		Height = 17, ;
		Left = 240, ;
		Name = "Label3", ;
		TabIndex = 5, ;
		Top = 204, ;
		Width = 127
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label4' AS label WITH ;
		Alignment = 2, ;
		AutoSize = .F., ;
		BackColor = 255,255,210, ;
		Caption = "X Shear Transform", ;
		Height = 24, ;
		Left = 12, ;
		Name = "Label4", ;
		TabIndex = 5, ;
		Top = 228, ;
		Width = 120
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Shape1' AS shape WITH ;
		BackColor = 0,0,128, ;
		Height = 25, ;
		Left = 132, ;
		Name = "Shape1", ;
		Top = 108, ;
		Width = 25
		*< END OBJECT: BaseClass="shape" />

	ADD OBJECT 'Shape2' AS shape WITH ;
		BackColor = 202,202,202, ;
		Height = 25, ;
		Left = 132, ;
		Name = "Shape2", ;
		Top = 144, ;
		Width = 25
		*< END OBJECT: BaseClass="shape" />

	ADD OBJECT 'Spinner3' AS spinner WITH ;
		BackColor = 255,255,210, ;
		Height = 24, ;
		Increment =   0.05, ;
		KeyboardHighValue = 10, ;
		KeyboardLowValue = -10, ;
		Left = 132, ;
		Name = "Spinner3", ;
		SpinnerHighValue =  10.00, ;
		SpinnerLowValue = -10.00, ;
		Top = 228, ;
		Value = 1.000, ;
		Width = 60
		*< END OBJECT: BaseClass="spinner" />

	ADD OBJECT 'TxtFontName' AS textbox WITH ;
		Height = 25, ;
		Left = 12, ;
		Name = "TxtFontName", ;
		TabIndex = 4, ;
		Top = 48, ;
		Value = Arial, ;
		Width = 108
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'TxtFontSize' AS textbox WITH ;
		Alignment = 3, ;
		Height = 25, ;
		Left = 132, ;
		Name = "TxtFontSize", ;
		TabIndex = 5, ;
		Top = 48, ;
		Value = 24, ;
		Width = 30
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'TxtFontStyle' AS textbox WITH ;
		Height = 25, ;
		Left = 168, ;
		Name = "TxtFontStyle", ;
		TabIndex = 6, ;
		Top = 48, ;
		Value = B, ;
		Width = 24
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtText' AS textbox WITH ;
		Anchor = 131, ;
		Height = 25, ;
		Left = 240, ;
		Name = "txtText", ;
		TabIndex = 1, ;
		Top = 36, ;
		Value = GdiPlus-X is Cool !, ;
		Width = 420
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE cmdGetFont.Click
		lcFont = GETFONT()
		Thisform.TxtFontName.Value = GETWORDNUM(lcFont,1,',')
		Thisform.TxtFontSize.Value = VAL(GETWORDNUM(lcFont,2,','))
		Thisform.TxtFontStyle.Value = GETWORDNUM(lcFont,3,',')
		Thisform.Imgcanvas1.Draw()
		Thisform.Imgcanvas2.Draw()
		
	ENDPROC

	PROCEDURE Command1.Click
		Thisform.Shape1.BackColor = GETCOLOR(Thisform.Shape1.BackColor)
		Thisform.Imgcanvas1.Draw()
		Thisform.Imgcanvas2.Draw()
	ENDPROC

	PROCEDURE Command2.Click
		Thisform.Shape2.BackColor = GETCOLOR(Thisform.Shape2.BackColor)
		Thisform.Imgcanvas1.Draw()
		Thisform.Imgcanvas2.Draw()
	ENDPROC

	PROCEDURE Imgcanvas1.beforedraw
		*!*	Based on Tom Archer's article at CodeGuru.com
		*!*	http://www.codeguru.com/cpp/g-m/gdi/gdi/article.php/c8703__2/
		
		LOCAL loFont AS xfcFont
		LOCAL loFontFamily AS xfcFontFamily
		
		WITH _SCREEN.SYSTEM.Drawing
			This.Clear()
		
			LOCAL lcStyle
			lcStyle = Thisform.TxtFontStyle.Value
			DO CASE
			CASE lcStyle == "B"
				loStyle = .FontStyle.Bold 
			CASE lcStyle == "I"
				loStyle = .FontStyle.Italic
			CASE lcStyle == "BI"
				loStyle = .FontStyle.BoldItalic
			OTHERWISE  
				loStyle = .FontStyle.Regular
			ENDCASE
			
			loFont = .Font.New(Thisform.TxtFontName.Value, Thisform.TxtFontSize.Value, loStyle)
			loFontFamily = .FontFamily.New(Thisform.TxtFontName.Value)
			
			This.oGfx.DrawString(Thisform.TxtText.Value, loFont, ;
				.SolidBrush.New(.Color.FromRGB(Thisform.Shape1.BackColor)), ;
				This.Rectangle)
		
			LOCAL lnCy, lnLineHeight, lnLineAscent, lnLineSpacing
			lnLineAscent = loFontFamily.GetCellAscent(loStyle)
			lnLineSpacing = loFontFamily.GetLineSpacing(loStyle)
			lnLineHeight = loFont.GetHeight(This.oGfx)
			lnCy = lnLineHeight * lnLineAscent / lnLineSpacing
		
			This.oGfx.ScaleTransform(1, -1)
			This.oGfx.DrawString(Thisform.TxtText.Value, loFont, ;
				.SolidBrush.New(.Color.FromRGB(Thisform.Shape2.BackColor)), ;
		   		.PointF.New(0, -(lnCy*2)-1))
			
			This.oGfx.ResetTransform()
		
		ENDWITH
		RETURN
	ENDPROC

	PROCEDURE Imgcanvas2.beforedraw
		*!*	BAsed on Tom Archer's article at CodeGuru.com
		*!*	http://www.codeguru.com/cpp/g-m/gdi/gdi/article.php/c8703__2/
		
		LOCAL loFont AS xfcFont
		LOCAL loFontFamily AS xfcFontFamily
		LOCAL loMatrix AS xfcMatrix
		
		WITH _SCREEN.SYSTEM.Drawing
			This.Clear()
		
			LOCAL lcStyle
			lcStyle = Thisform.TxtFontStyle.Value
			DO CASE
			CASE lcStyle == "B"
				loStyle = .FontStyle.Bold 
			CASE lcStyle == "I"
				loStyle = .FontStyle.Italic
			CASE lcStyle == "BI"
				loStyle = .FontStyle.BoldItalic
			OTHERWISE  
				loStyle = .FontStyle.Regular
			ENDCASE
			
			loFont = .Font.New(Thisform.TxtFontName.Value, Thisform.TxtFontSize.Value, loStyle)
			loFontFamily = .FontFamily.New(Thisform.TxtFontName.Value)
			
			This.oGfx.DrawString(Thisform.TxtText.Value, loFont, ;
				.SolidBrush.New(.Color.FromRGB(Thisform.Shape1.BackColor)), ;
				This.Rectangle)
		
			LOCAL lnCy, lnLineHeight, lnLineAscent, lnLineSpacing, lnShear
			lnLineAscent = loFontFamily.GetCellAscent(loStyle)
			lnLineSpacing = loFontFamily.GetLineSpacing(loStyle)
			lnLineHeight = loFont.GetHeight(This.oGfx)
			lnCy = lnLineHeight * lnLineAscent / lnLineSpacing
		
			lnShear = Thisform.Spinner3.Value
			loMatrix = .Drawing2D.Matrix.New()
			loMatrix.Shear(lnShear, 0)
			loMatrix.Scale(1, -1)
		
			This.oGfx.MultiplyTransform(loMatrix)
		
			This.oGfx.DrawString(Thisform.TxtText.Value, loFont, ;
				.SolidBrush.New(.Color.FromRGB(Thisform.Shape2.BackColor)), ;
		   		.PointF.New(0 + (-0.82 * lnLineHeight * lnShear) , -(lnCy*2)-1))
		
			This.oGfx.ResetTransform()
		
		ENDWITH
		RETURN
	ENDPROC

	PROCEDURE Shape1.Click
		This.Parent.Command1.Click
	ENDPROC

	PROCEDURE Shape2.Click
		This.Parent.Command2.Click
	ENDPROC

	PROCEDURE Spinner3.InteractiveChange
		Thisform.Imgcanvas1.Draw()
		Thisform.Imgcanvas2.Draw()
	ENDPROC

	PROCEDURE TxtFontName.Valid
		Thisform.Imgcanvas1.Draw()
		Thisform.Imgcanvas2.Draw()
		
	ENDPROC

	PROCEDURE TxtFontSize.Valid
		Thisform.Imgcanvas1.Draw()
		Thisform.Imgcanvas2.Draw()
		
	ENDPROC

	PROCEDURE TxtFontStyle.Valid
		Thisform.Imgcanvas1.Draw()
		Thisform.Imgcanvas2.Draw()
		
	ENDPROC

	PROCEDURE txtText.InteractiveChange
		LPARAMETERS nKeyCode, nShiftAltCtrl
		DODEFAULT()
		Thisform.Imgcanvas1.Draw()
		Thisform.Imgcanvas2.Draw()
	ENDPROC

ENDDEFINE
