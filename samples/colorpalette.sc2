*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.20" SourceFile="colorpalette.scx" CPID="1252" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	*<PropValue>
		DataSource = .NULL.
		Height = 200
		Left = 1
		Name = "Dataenvironment"
		Top = 220
		Width = 520
	*</PropValue>

ENDDEFINE

DEFINE CLASS form1 AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Imgcanvas1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtFile" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Image1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Edit1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Image2" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: mode
	*</DefinedPropArrayMethod>

	*<PropValue>
		Caption = "Retrieve GIF properties and ColorPalettes"
		DoCreate = .T.
		Height = 411
		Left = 87
		mode = 0
		Name = "Form1"
		Top = 10
		Width = 516
	*</PropValue>

	ADD OBJECT 'Command3' AS commandbutton WITH ;
		Anchor = 1, ;
		Caption = "Get Picture", ;
		Height = 25, ;
		Left = 12, ;
		Name = "Command3", ;
		Picture = (home() + "/graphics/bitmaps/outline/open.bmp"), ;
		PictureMargin = 1, ;
		PicturePosition = 1, ;
		TabIndex = 1, ;
		Top = 204, ;
		Width = 96
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Edit1' AS editbox WITH ;
		Anchor = 15, ;
		DisabledBackColor = 255,255,255, ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		Height = 160, ;
		Left = 257, ;
		Name = "Edit1", ;
		ScrollBars = 0, ;
		TabIndex = 3, ;
		Top = 240, ;
		Visible = .F., ;
		Width = 248
		*< END OBJECT: BaseClass="editbox" />

	ADD OBJECT 'Image1' AS image WITH ;
		Anchor = 3, ;
		Height = 180, ;
		Left = 12, ;
		Name = "Image1", ;
		Stretch = 1, ;
		Top = 12, ;
		Width = 240
		*< END OBJECT: BaseClass="image" />

	ADD OBJECT 'Image2' AS image WITH ;
		Anchor = 2, ;
		Height = 156, ;
		Left = 12, ;
		Name = "Image2", ;
		Top = 240, ;
		Visible = .F., ;
		Width = 236
		*< END OBJECT: BaseClass="image" />

	ADD OBJECT 'Imgcanvas1' AS imgcanvas WITH ;
		Anchor = 15, ;
		Height = 180, ;
		Left = 264, ;
		Name = "Imgcanvas1", ;
		smoothingmode = 0, ;
		Top = 12, ;
		Width = 240
		*< END OBJECT: ClassLib="..\gdiplusx.vcx" BaseClass="image" />

	ADD OBJECT 'txtFile' AS textbox WITH ;
		Anchor = 131, ;
		DisabledBackColor = 255,255,255, ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		FontSize = 8, ;
		Height = 25, ;
		Left = 120, ;
		Name = "txtFile", ;
		TabIndex = 2, ;
		Top = 204, ;
		Width = 384
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE Init
		
		LOCAL lcPicture
		lcPicture = LOCFILE("GotData.gif")
		Thisform.txtFile.Value = lcPicture
		Thisform.Image1.Picture = lcPicture
		Thisform.Imgcanvas1.Draw()
		
	ENDPROC

	PROCEDURE Command3.Click
		LOCAL lcFile
		lcFile = GETPICT("gif")
		IF EMPTY(lcFile)
			RETURN
		ENDIF
		Thisform.txtFile.Value = lcFile
		Thisform.Image1.Picture = lcFile
		Thisform.Imgcanvas1.Draw()
		
	ENDPROC

	PROCEDURE Imgcanvas1.beforedraw
		This.Clear
		IF EMPTY(Thisform.txtFile.Value)
			RETURN
		ENDIF
		
		LOCAL loBmpData AS xfcBitmapData
		LOCAL loImg AS xfcImage
		LOCAL loPalette AS xfcColorPalette
		LOCAL loColor AS xfcColor
		LOCAL loSBrush AS xfcSolidBrush
		
		LOCAL x1, y1, n
		WITH _SCREEN.System.Drawing
			loImg = .Image.FromFile(Thisform.txtFile.Value)
			IF ISNULL(loImg)
				MESSAGEBOX("Could not load image file")
				RETURN 
			ENDIF
			loPalette = loImg.Palette
			x1 = 0
			y1 = 0
			FOR n = 1 TO ALEN(loPalette.Entries)
				loColor	= loPalette.Entries(n)
				loSBrush = .SolidBrush.New(loColor)
				This.oGfx.FillRectangle(loSBrush, x1, y1, 15, 15)
				x1 = x1 + 15
				IF x1 > This.Width
					x1 = 0
					y1 = y1 + 15
				ENDIF
			ENDFOR 
		
		
		* Get PixelFormat name
		LOCAL lnPix, lcPixFormat
		lnPix = loImg.PixelFormat 
		DO CASE 
		CASE lnPix = .Imaging.PixelFormat.Format1bppIndexed 
			lcPixFormat = "1bppIndexed"
		CASE lnPix = .Imaging.PixelFormat.Format4bppIndexed 
			lcPixFormat = "4bppIndexed"
		CASE lnPix = .Imaging.PixelFormat.Format8bppIndexed 
			lcPixFormat = "8bppIndexed"
		CASE lnPix = .Imaging.PixelFormat.Format16bppGrayScale
			lcPixFormat = "16bppGrayScale"
		CASE lnPix = .Imaging.PixelFormat.Format16bppRGB555
			lcPixFormat = "16bppRGB555"
		CASE lnPix = .Imaging.PixelFormat.Format16bppRGB565
			lcPixFormat = "16bppRGB565"
		CASE lnPix = .Imaging.PixelFormat.Format16bppARGB1555
			lcPixFormat = "16bppARGB1555"
		CASE lnPix = .Imaging.PixelFormat.Format24bppRGB
			lcPixFormat = "24bppRGB"
		CASE lnPix = .Imaging.PixelFormat.Format32bppRGB
			lcPixFormat = "32bppRGB"
		CASE lnPix = .Imaging.PixelFormat.Format32bppARGB
			lcPixFormat = "32bppARGB"
		CASE lnPix = .Imaging.PixelFormat.Format32bppPARGB
			lcPixFormat = "32bppPARGB"
		CASE lnPix = .Imaging.PixelFormat.Format48bppRGB
			lcPixFormat = "48bppRGB"
		CASE lnPix = .Imaging.PixelFormat.Format64bppPARGB
			lcPixFormat = "64bppPARGB"
		OTHERWISE 
			lcPixFormat = "Unidentified"
		ENDCASE 
		
		ENDWITH
		
		
		* Retrieve Metadata Tags from Image
		LOCAL lcProperties, lnProp, lcPropName, llAnimatedGIF
		LOCAL loProp AS xfcPropertyItem
		llAnimatedGIF = .F.
		lcProperties = "" + CHR(13)
		FOR EACH lnProp IN loImg.PropertyIdList
			loProp = loImg.GetPropertyItem(lnProp)
			DO CASE 
			CASE loProp.Id = 0x5100
				lcProperties = lcProperties + "PropertyTagFrameDelay : " + loProp.ToString() + CHR(13)
				IF ALLTRIM(loProp.ToString()) <> "0"
					llAnimatedGIF = .T.
				ENDIF 
			CASE loProp.Id = 0x5101
				lcProperties = lcProperties + "PropertyTagLoopCount : " + loProp.ToString() + CHR(13)
			ENDCASE 
		ENDFOR
		
		Thisform.Edit1.Value = ;
			"Width : " + TRANSFORM(loImg.Width) + SPACE(25) +;
			"Height : " + TRANSFORM(loImg.Height) + CHR(13) +;
			"Resolution - Vertical : " + TRANSFORM(loImg.VerticalResolution) + SPACE(6) +;
			"Horizontal : " + TRANSFORM(loImg.HorizontalResolution) + CHR(13) +;
			"PixelFormat : " + lcPixFormat + CHR(13) + ;
			"Number of colors : " + TRANSFORM(ALEN(loPalette.Entries)) + CHR(13) +;
			"Transparency enabled : " + IIF(loPalette.Flags = 2,"YES", "NO") + SPACE(10) +;
			"Flags : " + TRANSFORM(loPalette.Flags) + CHR(13)+;
			"Animated GIF : " + IIF(llAnimatedGIF,"YES", "NO") + lcProperties
			
		Thisform.Edit1.Visible = .T.
		
		IF loImg.Width <= Thisform.Image2.Width AND loImg.Height <= Thisform.Image2.Height
			Thisform.Image2.Picture = Thisform.TxtFile.Value
			Thisform.Image2.Visible = .T. 
		ELSE
			Thisform.Image2.Visible = .F. 	
		ENDIF
	ENDPROC

ENDDEFINE
